<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >

<!-- TABLE : PT_AUTH_GRP_USER_R[권한그룹사용자관계] -->
<mapper namespace="com.innobiz.orange.web.wb.dao.WbBcBumkRDao">

	<resultMap id="wbBcBumkRMap" type="WbBcBVo">
		<id property="bcId" column="BC_ID" /><!-- 명함ID -->
		<result property="publTypCd" column="OPEN_TYP_CD" /><!-- 공개구분코드 -->
		<result property="fldId" column="FLD_ID" /><!-- 폴더ID -->
		<result property="fldNm" column="FLD_NM" /><!-- 폴더명 -->
		<result property="bcNm" column="BC_NM" /><!-- 명함성명 -->
		<result property="rnum" column="RNUM" /><!-- 레코드 번호 -->
		<result property="bcEnNm" column="BC_EN_NM" /><!-- 명함영문성명 -->
		<result property="dftCntcTypCd" column="DFT_CNTC_TYP_CD" /><!-- 기본연락처구분코드 -->
		<result property="compNm" column="COMP_NM" /><!-- 회사명 -->
		<result property="deptNm" column="DEPT_NM" /><!-- 부서명 -->
		<result property="gradeNm" column="GRADE_NM" /><!-- 직급명 -->
		<result property="tichCont" column="TICH_CONT" /><!-- 담당업무내용 -->
		<result property="iptfgYn" column="IPTFG_YN" /><!-- 주요인사여부 -->
		<result property="fno" column="FNO" /><!-- 팩스번호 -->
		<!-- 주소생략 ( 주소 체계 정해지면 추가) -->
		<!-- 사진,첨부파일생략 ( 체계 정해지면 추가) -->
		<result property="bumkYn" column="BUMK_YN" /><!-- 즐겨찾기여부 -->
		<result property="genCd" column="GEN_CD" /><!-- 성별코드 -->
		<result property="genNm" column="GEN_NM" /><!-- 성별이름 -->
		<result property="natyCd" column="NATY_CD" /><!-- 국적코드 -->
		<result property="birth" column="BIRTH" /><!-- 생년월일 -->
		<result property="birthSclcCd" column="BIRTH_SCLC_CD" /><!-- 생년월일월력코드 -->
		<result property="weddAnnv" column="WEDD_ANNV" /><!-- 결혼기념일 -->
		<result property="weddAnnvSclcCd" column="WEDD_ANNV_SCLC_CD" /><!-- 결혼기념일월력코드 -->
		<result property="psnHpageUrl" column="PSN_HPAGE_URL" /><!-- 개인홈페이지URL -->
		<result property="compHpageUrl" column="COMP_HPAGE_URL" /><!-- 회사홈페이지URL -->
		<result property="hobyCont" column="HOBY_CONT" /><!-- 취미내용 -->
		<result property="spectCont" column="SPECT_CONT" /><!-- 특기사항내용 -->
		<result property="eschlNm" column="ESCHL_NM" /><!-- 초등학교명 -->
		<result property="mschlNm" column="MSCHL_NM" /><!-- 중학교명 -->
		<result property="hschlNm" column="HSCHL_NM" /><!-- 고등학교명 -->
		<result property="univCont" column="UNIV_CONT" /><!-- 대학교내용 -->
		<result property="bhistCont" column="BHIST_CONT" /><!-- 약력내용 -->
		<result property="clnsId" column="CLNS_ID" /><!-- 친밀도ID -->
		<result property="clnsNm" column="CLNS_NM" /><!-- 친밀도명 -->
		<result property="noteCont" column="NOTE_CONT" /><!-- 비고내용 -->
		<!-- 사진,첨부파일생략 ( 체계 정해지면 추가) -->
		<result property="bcRegTypCd" column="BC_REG_TYP_CD" /><!-- 명함등록구분코드 -->
		<result property="compPhon" column="COMP_PHON" /><!-- 회사전화 -->
		<result property="homePhon" column="HOME_PHON" /><!-- 자택전화 -->
		<result property="mbno" column="MBNO" /><!-- 이동전화 -->
		<result property="email" column="EMAIL" /><!-- 이메일 -->
	</resultMap>
	
	<!-- 조회조건 -->
	<sql id="selectWbBcBumkRWhere">
		<where>
			<if test="bcId != null and bcId !=''"> AND WB_T.BC_ID = #{bcId, jdbcType=VARCHAR}</if>
			<if test="regrUid != null"> AND WB_T.REGR_UID = #{regrUid, jdbcType=VARCHAR}</if>
			<if test="'pwsmName'.equals(schCat) and schWord != null and schWord != ''">AND WB_T.BC_NM = #{schWord, jdbcType=VARCHAR}</if>
			<!-- 사용자 목록설정에 따른 컬럼 조회  -->
			<if test="'bcNm'.equals(schCat) and schWord != null and schWord != ''">AND WB_T.BC_NM LIKE '%'+#{schWord, jdbcType=VARCHAR}+'%'</if>
			<if test="'birth'.equals(schCat) and schWord != null and schWord != ''">AND WB_T.BIRTH = #{schWord, jdbcType=VARCHAR}</if>
			<if test="'compNm'.equals(schCat) and schWord != null and schWord != ''">AND WB_T.COMP_NM LIKE '%'+#{schWord, jdbcType=VARCHAR}+'%'</if>
			<if test="'deptNm'.equals(schCat) and schWord != null and schWord != ''">AND WB_T.DEPT_NM LIKE '%'+#{schWord, jdbcType=VARCHAR}+'%'</if>
			<if test="'fno'.equals(schCat) and schWord != null and schWord != ''">AND WB_T.FNO LIKE '%'+#{schWord, jdbcType=VARCHAR}+'%'</if>
			<if test="'genNm'.equals(schCat) and schWord != null and schWord != ''">AND WB_T.GEN_NM LIKE '%'+#{schWord, jdbcType=VARCHAR}+'%'</if>
			<if test="'gradeNm'.equals(schCat) and schWord != null and schWord != ''">AND WB_T.GRADE_NM LIKE '%'+#{schWord, jdbcType=VARCHAR}+'%'</if>
			<if test="'weddAnnv'.equals(schCat) and schWord != null and schWord != ''">AND WB_T.WEDD_ANNV = #{schWord, jdbcType=VARCHAR}</if>
			<if test="'clnsNm'.equals(schCat) and schWord != null and schWord != ''">AND WB_T.CLNS_ID = ( SELECT CLNS_ID FROM WB_BC_CLNS_C WBL_T WHERE WBL_T.REGR_UID = WB_T.REGR_UID AND WBL_T.CLNS_ID = WB_T.CLNS_ID AND WBL_T.CLNS_NM LIKE '%'+#{schWord, jdbcType=VARCHAR}+'%' )</if>
			<if test="('compPhon'.equals(schCat) or 'homePhon'.equals(schCat) or 'mbno'.equals(schCat) or 'email'.equals(schCat)) and schWord != null and schWord != ''">
				AND WB_T.BC_ID IN( SELECT WBC_T.BC_ID FROM WB_BC_CNTC_D WBC_T WHERE WBC_T.BC_ID = WB_T.BC_ID	AND WBC_T.CNTC_TYP_CD = #{schCat, jdbcType=VARCHAR} AND REPLACE(WBC_T.CNTC_CONT,'-','') LIKE '%'+REPLACE(#{schWord, jdbcType=VARCHAR},'-','')+'%'  GROUP BY WBC_T.BC_ID	)
			</if>
			<if test='schBumkYn != null and schBumkYn !="" and "Y".equals(schBumkYn)'>AND WBB_T.BC_ID IS NOT NULL</if>
			<if test='schBumkYn != null and schBumkYn !="" and "N".equals(schBumkYn)'>AND WBB_T.BC_ID IS NULL</if>
		</where>
	</sql>
	
	<!-- 목록조회 -->
	<select id="selectWbBcBumkR" resultMap="wbBcBumkRMap" parameterType="WbBcBumkRVo" >
		/* com.innobiz.orange.web.wb.dao.WbBcBumkRDao.selectWbBcBumkR */
		<if test="pageNo != null and pageRowCnt != null">
		SELECT * FROM (
		</if>
		SELECT
		<trim prefix="" suffix="" suffixOverrides=",">
			<if test="pageNo != null and pageRowCnt != null">
			TOP (#{pageNo, jdbcType=NUMERIC} * #{pageRowCnt, jdbcType=NUMERIC}) ROW_NUMBER() OVER (ORDER BY <if test="orderBy != null">${orderBy}</if><if test="orderBy == null">N.BC_NM ASC</if>) AS RNUM, N.* 
			FROM (
				SELECT
			</if>
			WB_T.BC_ID ,WB_T.OPEN_TYP_CD ,WB_T.FLD_ID , (SELECT WBFB_T.FLD_NM FROM WB_BC_FLD_B WBFB_T WHERE WBFB_T.BC_FLD_ID = WB_T.FLD_ID ) AS FLD_NM,
			WB_T.BC_NM ,WB_T.BC_EN_NM,WB_T.DFT_CNTC_TYP_CD , WB_T.COMP_NM ,WB_T.DEPT_NM ,WB_T.GRADE_NM ,WB_T.TICH_CONT ,WB_T.
		   IPTFG_YN ,WB_T.FNO ,WB_T.COMP_ZIP_NO ,WB_T.COMP_ADR ,WB_T.COMP_DETL_ADR ,WB_T.HOME_ZIP_NO ,WB_T.HOME_ADR ,WB_T.HOME_DETL_ADR ,
		   WB_T.BUMK_YN ,WB_T.PHOTO_FILE_ID ,WB_T.GEN_CD ,
		   (SELECT RESC_VA FROM PT_RESC_B WHERE RESC_ID = (SELECT RESC_ID FROM PT_CD_B WHERE CLS_CD = 'GEN_CD' AND CD = WB_T.GEN_CD) AND LANG_TYP_CD = ISNULL(#{queryLang, jdbcType=VARCHAR},'ko') ) AS GEN_NM ,
		   WB_T.NATY_CD ,CONVERT(VARCHAR(10), WB_T.BIRTH, 120) BIRTH ,WB_T.BIRTH_SCLC_CD ,CONVERT(VARCHAR(10), WB_T.WEDD_ANNV, 120) WEDD_ANNV ,WB_T.WEDD_ANNV_SCLC_CD ,WB_T.PSN_HPAGE_URL ,
		   WB_T.COMP_HPAGE_URL ,WB_T.HOBY_CONT ,WB_T.SPECT_CONT ,WB_T.ESCHL_NM ,WB_T.MSCHL_NM ,WB_T.HSCHL_NM ,WB_T.UNIV_CONT ,WB_T.BHIST_CONT ,WB_T.CLNS_ID ,
		   ( SELECT CLNS_NM FROM WB_BC_CLNS_C WBL_T WHERE WBL_T.REGR_UID = WB_T.REGR_UID AND WBL_T.CLNS_ID = WB_T.CLNS_ID) AS CLNS_NM ,
		   WB_T.NOTE_CONT ,WB_T.ATT_FILE_ID ,WB_T.BC_REG_TYP_CD ,WB_T.REGR_UID ,CONVERT(VARCHAR(10), WB_T.REG_DT, 120) AS REG_DT ,WB_T.MODR_UID ,WB_T.MOD_DT , 
		   ( SELECT CNTC_CONT FROM WB_BC_CNTC_D WBC_T WHERE WBC_T.BC_ID = WB_T.BC_ID AND WBC_T.CNTC_CLS_CD = 'CNTC' AND CNTC_TYP_CD = 'compPhon' AND WBC_T.BC_CNTC_SEQ = 1 ) AS COMP_PHON ,
		   ( SELECT CNTC_CONT FROM WB_BC_CNTC_D WBC_T WHERE WBC_T.BC_ID = WB_T.BC_ID AND WBC_T.CNTC_CLS_CD = 'CNTC' AND CNTC_TYP_CD = 'homePhon' AND WBC_T.BC_CNTC_SEQ = 1 ) AS HOME_PHON , 
		   ( SELECT CNTC_CONT FROM WB_BC_CNTC_D WBC_T WHERE WBC_T.BC_ID = WB_T.BC_ID AND WBC_T.CNTC_CLS_CD = 'CNTC' AND CNTC_TYP_CD = 'mbno' AND WBC_T.BC_CNTC_SEQ = 1 ) AS MBNO ,
		   ( SELECT CNTC_CONT FROM WB_BC_CNTC_D WBC_T WHERE WBC_T.BC_ID = WB_T.BC_ID AND WBC_T.CNTC_CLS_CD = 'EMAIL' AND CNTC_TYP_CD = 'email' AND WBC_T.BC_CNTC_SEQ = 1 ) AS EMAIL ,
		</trim>
		FROM WB_BC_B WB_T LEFT OUTER JOIN WB_BC_BUMK_R WBB_T ON WBB_T.BC_ID = WB_T.BC_ID
		<include refid="selectWbBcBumkRWhere"/>
		<if test="pageNo == null or pageRowCnt == null">
			<if test="orderBy != null">ORDER BY ${orderBy}</if>
			<if test="orderBy == null">ORDER BY WBB_T.SORT_ORDR,WB_T.BC_NM ASC</if>
		</if>
		<if test="pageNo != null and pageRowCnt != null">
		<![CDATA[) N ) M WHERE RNUM > (#{pageNo, jdbcType=NUMERIC} - 1) * #{pageRowCnt, jdbcType=NUMERIC} AND RNUM <= #{pageNo, jdbcType=NUMERIC} * #{pageRowCnt, jdbcType=NUMERIC}]]>
		</if>
	</select>
	
	<!-- 목록조회 건수-->
	<select id="countWbBcBumkR" resultType="Integer" parameterType="WbBcBumkRVo" >
		/* com.innobiz.orange.web.wb.dao.WbBcBumkRDao.countWbBcBumkR */
		SELECT COUNT(*) CNT
		FROM WB_BC_B WB_T LEFT OUTER JOIN WB_BC_BUMK_R WBB_T ON WBB_T.BC_ID = WB_T.BC_ID
		<include refid="selectWbBcBumkRWhere"/>
	</select>
	
	<!-- 명함즐겨찾기관계 등록 저장 -->
	<insert id="insertWbBcBumkR" parameterType="WbBcBumkRVo" >
		/* com.innobiz.orange.web.wb.dao.WbBcBumkRDao.insertWbBcBumkR */
		INSERT INTO WB_BC_BUMK_R
		<trim prefix="(" suffix=")" suffixOverrides=",">
			REGR_UID , BC_ID , SORT_ORDR , 
		</trim>
		<trim prefix="VALUES (" suffix=")" suffixOverrides="," >
			#{regrUid, jdbcType=VARCHAR} , #{bcId, jdbcType=VARCHAR}, #{sortOrdr, jdbcType=INTEGER},
		</trim>
	</insert>

	<!-- 명함즐겨찾기관계 삭제 -->
	<delete id="deleteWbBcBumkR" parameterType="WbBcBumkRVo" >
		/* com.innobiz.orange.web.wb.dao.WbBcBumkRDao.deleteWbBcBumkR */
		DELETE FROM WB_BC_BUMK_R
		<where>
			<if test="regrUid != null"> AND REGR_UID = #{regrUid, jdbcType=VARCHAR}</if>
			<if test="bcId != null"> AND BC_ID = #{bcId, jdbcType=VARCHAR}</if>
		</where>
	</delete>

</mapper>