<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >

<!-- TABLE : ${tableName}[문서기본] -->
<mapper namespace="com.innobiz.orange.web.dm.dao.DmDocLDao">

	<resultMap id="dmDocLMap" type="DmDocLVo">
		<id property="docId" column="DOC_ID" /><!-- 문서ID -->
		<result property="docGrpId" column="DOC_GRP_ID" /><!-- 문서그룹ID -->
		<result property="statCd" column="STAT_CD" /><!-- 상태코드 -->
		<result property="dftYn" column="DFT_YN" /><!-- 기본여부 -->
		<result property="subYn" column="SUB_YN" /><!-- 하위여부 -->
		<result property="subDocGrpId" column="SUB_DOC_GRP_ID" /><!-- 하위문서그룹ID -->
		<result property="docPid" column="DOC_PID" /><!-- 부모PID -->
		<result property="sortOrdr" column="SORT_ORDR" /><!-- 정렬순서 -->
		<result property="sortDpth" column="SORT_DPTH" /><!-- 정렬단계 -->
		<result property="verVa" column="VER_VA" /><!-- 버전값 -->
		<result property="fldId" column="FLD_ID" /><!-- 폴더ID -->
		<result property="fldNm" column="FLD_NM" /><!-- 폴더명 -->
		<result property="discStatNm" column="DISC_STAT_NM" /><!-- 심의상태명 -->
		<result property="docNo" column="DOC_NO" /><!-- 문서번호 -->
		<result property="subj" column="SUBJ" /><!-- 제목 -->
		<result property="cont" column="CONT" /><!-- 본문 -->
		<result property="ownrUid" column="OWNR_UID" /><!-- 소유자ID -->
		<result property="ownrNm" column="OWNR_NM" /><!-- 소유자명 -->
		<result property="docKeepPrdCd" column="DOC_KEEP_PRD_CD" /><!-- 문서보존기간코드 -->
		<result property="docKeepPrdNm" column="DOC_KEEP_PRD_NM" /><!-- 문서보존기간명 -->
		<result property="seculCd" column="SECUL_CD" /><!-- 보안등급코드 -->
		<result property="seculNm" column="SECUL_NM" /><!-- 보안등급명 -->
		<result property="cmplDt" column="CMPL_DT" /><!-- 완료일시 -->
		<result property="readCnt" column="READ_CNT" /><!-- 조회수 -->
		<result property="refTyp" column="REF_TYP" /><!-- 참조구분 -->
		<result property="refId" column="REF_ID" /><!-- 참조ID -->
		<result property="refUrl" column="REF_URL" /><!-- 참조URL -->
		<result property="orgnYn" column="ORGN_YN" /><!-- 원본여부 -->
		<result property="regrUid" column="REGR_UID" /><!-- 등록자 -->
		<result property="regDt" column="REG_DT" /><!-- 등록일시 -->
		<result property="regrNm" column="REGR_NM" /><!-- 등록자명 -->
		<result property="modrUid" column="MODR_UID" /><!-- 수정자UID -->		
		<result property="modDt" column="MOD_DT" /><!-- 수정일시 -->
		<result property="modrNm" column="MODR_NM" /><!-- 수정자명 -->
		<result property="c1" column="C1" /><!-- 확장컬럼01 -->
		<result property="c2" column="C2" /><!-- 확장컬럼02 -->
		<result property="c3" column="C3" /><!-- 확장컬럼03 -->
		<result property="c4" column="C4" /><!-- 확장컬럼04 -->
		<result property="c5" column="C5" /><!-- 확장컬럼05 -->
		<result property="c6" column="C6" /><!-- 확장컬럼06 -->
		<result property="c7" column="C7" /><!-- 확장컬럼07 -->
		<result property="c8" column="C8" /><!-- 확장컬럼08 -->
		<result property="c9" column="C9" /><!-- 확장컬럼09 -->
		<result property="cA" column="CA" /><!-- 확장컬럼10 -->
		<result property="dispOrdr" column="DISP_ORDR" /><!-- 표시순서 -->
		<result property="newYn" column="NEW_YN" /><!-- 최신여부 -->
		<result property="keepDdlnYn" column="KEEP_DDLN_YN" /><!-- 보존기한여부 -->
		<result property="keepDdlnDt" column="KEEP_PRD_DT" /><!-- 보존기한 -->
		<result property="orgId" column="ORG_ID" /><!-- 조직ID -->
		<result property="tgtOrgId" column="TGT_ORG_ID" /><!-- 대상조직ID -->
		<result property="takOrgNm" column="TAK_ORG_NM" /><!-- 인계조직명 -->
		<result property="tgtOrgNm" column="TGT_ORG_NM" /><!-- 대상조직명 -->
		<result property="takStatCd" column="TAK_STAT_CD" /><!-- 인수인계상태코드 -->
		<result property="takStatNm" column="TAK_STAT_NM" /><!-- 인수인계상태코드 -->
		<result property="takRegDt" column="TAK_REG_DT" /><!-- 인계일자 -->
		<result property="tranId" column="TRAN_ID" /><!-- 이관ID -->
		<result property="errCont" column="ERR_CONT" /><!-- 오류내용 -->
		<result property="tgtId" column="TGT_ID" /><!-- 대상ID -->
		<result property="tgtNm" column="TGT_NM" /><!-- 대상명 -->
		<result property="tgtTypCd" column="TGT_TYP_CD" /><!-- 대상구분코드 -->
		<result property="tgtTypNm" column="TGT_TYP_NM" /><!-- 대상구분 -->
		<result property="viewReqStatCd" column="VIEW_REQ_STAT_CD" /><!-- 열람요청상태코드 -->
		<result property="viewReqStatNm" column="VIEW_REQ_STAT_NM" /><!-- 열람요청상태 -->
		<result property="readStrtDt" column="READ_STRT_DT" /><!-- 열람시작일시 -->
		<result property="readEndDt" column="READ_END_DT" /><!-- 열람종료일시 -->
		<result property="reqUserUid" column="REQ_USER_UID" /><!-- 요청자UID -->
		<result property="reqUserNm" column="REQ_USER_NM" /><!-- 요청자 -->
		<result property="reqDt" column="REQ_DT" /><!-- 요청일시 -->
		<result property="rjtOpin" column="RJT_OPIN" /><!-- 반려의견 -->
		
	</resultMap>
	
	<resultMap id="dmDocLNaviMap" type="DmDocLVo">
		<id property="docId" column="DOC_ID" /><!-- 문서ID -->
		<result property="prevDocId" column="PREV_ID" /><!-- 이전문서ID -->
		<result property="nextDocId" column="NEXT_ID" /><!-- 다음문서ID -->
	</resultMap>
	
	<!-- 조회조건 -->
	<sql id="selectDmDocLWhere">				
		<if test="tableName != null and tableName != ''">
			<if test="docGrpId != null and docGrpId !=''"> AND T.DOC_GRP_ID = #{docGrpId, jdbcType=VARCHAR}</if>
			<if test="docNo != null and docNo !=''"> AND D.DOC_NO LIKE '%' || #{docNo, jdbcType=VARCHAR} || '%'</if>
			<if test="statCd != null and statCd !=''"> AND D.STAT_CD = #{statCd, jdbcType=VARCHAR}</if>
			<if test="dftYn != null and dftYn !=''"> AND T.DFT_YN = #{dftYn, jdbcType=VARCHAR}</if>
			<if test="subYn != null and subYn !=''"> AND D.SUB_YN = #{subYn, jdbcType=VARCHAR}</if>
			<if test="subDocGrpId != null and subDocGrpId !=''"> AND D.SUB_DOC_GRP_ID = #{subDocGrpId, jdbcType=VARCHAR}</if>
			<if test="docPid != null and docPid !=''"> AND D.DOC_PID = #{docPid, jdbcType=VARCHAR}</if>
			<if test="sortDpth != null and sortDpth !=''"> AND D.SORT_DPTH = #{sortDpth, jdbcType=VARCHAR}</if>			
			<if test="docKeepPrdCd != null and docKeepPrdCd !=''"> AND D.DOC_KEEP_PRD_CD = #{docKeepPrdCd, jdbcType=VARCHAR}</if>
			<if test='isListSrchAuth == null or !isListSrchAuth'>
				<if test="ownrUid != null and ownrUid !=''"> AND D.OWNR_UID = #{ownrUid, jdbcType=VARCHAR}</if>
				<if test="seculCd != null and seculCd !=''"> AND D.SECUL_CD = #{seculCd, jdbcType=VARCHAR}</if>
				<if test="regrUid != null and regrUid !=''"> AND T.REGR_UID = #{regrUid, jdbcType=VARCHAR}</if>
				<if test="modrUid != null and modrUid !=''"> AND T.MODR_UID = #{modrUid, jdbcType=VARCHAR}</if>
			</if>
			<if test='newYn != null and "Y".equals(newYn)'> <![CDATA[AND D.CMPL_DT IS NOT NULL AND TO_CHAR( D.CMPL_DT, 'YYYY-MM-DD') > #{newDdlnDt, jdbcType=VARCHAR}]]></if>
			<if test="fldId != null and fldId !=''"> AND D.FLD_ID = #{fldId, jdbcType=VARCHAR}</if>
			<if test="dmFldBVoList != null">
				<foreach item="fldVo" index="index" collection="dmFldBVoList" open=" AND D.FLD_ID IN(" close=")" separator=",">
				#{fldVo.fldId, jdbcType=VARCHAR}
				</foreach>
			</if>
			<!-- 권한적용 - (소유자 OR 보안등급)-->
			<if test='isListSrchAuth != null and isListSrchAuth'>
				AND (D.OWNR_UID = #{ownrUid, jdbcType=VARCHAR}
				<if test="seculCdList == null"> OR D.SECUL_CD = #{seculCd, jdbcType=VARCHAR}</if>
				<if test="seculCdList != null">
					<foreach item="seculCd" index="index" collection="seculCdList" open=" OR D.SECUL_CD IN(" close=")" separator=",">
					#{seculCd, jdbcType=VARCHAR}
					</foreach>
				</if>
				<if test="srchUserUid != null and srchUserUid !=''"> OR T.REGR_UID = #{srchUserUid, jdbcType=VARCHAR}</if>
				)
			</if>
			<!-- 인수대기문서 조회조건 -->
			<if test='dmTakovrBVo != null'>
				<if test="takOrgId != null and takOrgId !=''"> AND TAK.TAK_ORG_ID = #{takOrgId, jdbcType=VARCHAR}</if>
				<if test="tgtOrgId != null and tgtOrgId !=''"> AND TAK.TGT_ORG_ID = #{tgtOrgId, jdbcType=VARCHAR}</if>
				<if test="takStatCd != null and takStatCd !=''"> AND TAK.TAK_STAT_CD = #{takStatCd, jdbcType=VARCHAR}</if>
			</if>
			<!-- 문서열람요청,승인 -->
			<if test='dmPubDocTgtDVo != null'>
				<if test="tgtId != null and tgtId !=''"> AND PUB.TGT_ID = #{tgtId, jdbcType=VARCHAR}</if>
				<if test="tgtTypCd != null and tgtTypCd !=''"> AND PUB.TGT_TYP_CD = #{tgtTypCd, jdbcType=VARCHAR}</if>
				<if test="viewReqStatCd != null and viewReqStatCd !=''"> AND PUB.VIEW_REQ_STAT_CD = #{viewReqStatCd, jdbcType=VARCHAR}</if>
				<if test="readStrtDt != null and readStrtDt != ''"><![CDATA[AND TO_CHAR( PUB.READ_END_DT, 'YYYY-MM-DD') >= #{readStrtDt, jdbcType=VARCHAR}]]></if>
				<if test="readEndDt != null and readEndDt != ''"><![CDATA[AND TO_CHAR( PUB.READ_STRT_DT, 'YYYY-MM-DD') <= #{readEndDt, jdbcType=VARCHAR}]]></if>
			</if>
		</if>
		<if test="tableName == null or tableName == ''">
		<if test="fldId != null and fldId !=''"> AND T.FLD_ID = #{fldId, jdbcType=VARCHAR}</if>
			<if test="dmFldBVoList != null">
				<foreach item="fldVo" index="index" collection="dmFldBVoList" open=" AND T.FLD_ID IN(" close=")" separator=",">
				#{fldVo.fldId, jdbcType=VARCHAR}
				</foreach>
			</if>
		</if>
		<if test="regrUid != null and regrUid !=''"> AND T.REGR_UID = #{regrUid, jdbcType=VARCHAR}</if>
		<if test="subj != null and subj != ''"> AND T.SUBJ LIKE '%' || #{subj, jdbcType=NVARCHAR} || '%'</if>
		<if test='schCat != null and "subj".equals(schCat) and schWord != null and schWord != ""'> AND T.SUBJ LIKE '%' || #{schWord, jdbcType=VARCHAR} || '%'</if>
		<if test='schCat != null and "cont".equals(schCat) and schWord != null and schWord != ""'> AND T.CONT LIKE '%' || #{schWord, jdbcType=VARCHAR} || '%'</if>
		<if test='schCat != null and "regrNm".equals(schCat) and schWord != null and schWord != ""'> AND R.RESC_VA like '%' || #{schWord, jdbcType=VARCHAR} || '%'</if>
		<if test='schCat != null and "docNo".equals(schCat) and schWord != null and schWord != ""'> AND D.DOC_NO LIKE '%' || #{schWord, jdbcType=VARCHAR} || '%'</if>
		<if test='schCat != null and "ownrNm".equals(schCat) and schWord != null and schWord != ""'> AND R2.RESC_VA like '%' || #{schWord, jdbcType=VARCHAR} || '%'</if>
		
		<!-- 다중 조회조건(String) -->
		<if test="whereSqllet != null and whereSqllet != ''"> ${whereSqllet}</if>
	</sql>
	
	<!-- 조인 조건 -->
	<sql id="selectDmDocLJoin">
		<if test="tableName != null and tableName != ''">
			<!-- 문서상세 -->
			INNER JOIN DM_${tableName}_DOC_D D ON D.DOC_GRP_ID = T.DOC_GRP_ID
		</if>
		<if test="schCat == 'regrNm' and schWord != null and schWord != ''">
			LEFT JOIN OR_USER_B U ON T.REGR_UID = U.USER_UID
			LEFT JOIN OR_RESC_B R ON U.RESC_ID = R.RESC_ID AND LANG_TYP_CD = NVL(#{queryLang, jdbcType=VARCHAR}, 'ko')
		</if>
		<if test="schCat == 'ownrNm' and schWord != null and schWord != ''">
			LEFT JOIN OR_USER_B U2 ON D.OWNR_UID = U2.USER_UID
			LEFT JOIN OR_RESC_B R2 ON U2.RESC_ID = R2.RESC_ID AND LANG_TYP_CD = NVL(#{queryLang, jdbcType=VARCHAR}, 'ko')
		</if>
		<if test="tableName != null and tableName != ''">			
			<!-- 보존연한 문서 조회 -->
			<if test='keepDdlnYn != null and keepDdlnYn !="" and "Y".equals(keepDdlnYn)'>
				<![CDATA[ AND TO_CHAR(KEEP_PRD_DT,'YYYY-MM-DD') < TO_CHAR(SYSDATE, 'YYYY-MM-DD') ]]>
			</if>
			<!-- <if test="storId != null and storId != ''"> AND STOR_ID = #{storId, jdbcType=VARCHAR}</if>  -->
			<!-- 분류체계 목록 조회 -->
			<if test="dmClsRVoList != null">
				INNER JOIN ( SELECT DOC_GRP_ID FROM DM_${tableName}_CLS_R
				<foreach item="clsVo" index="index" collection="dmClsRVoList" open=" WHERE CLS_ID IN(" close=")" separator=",">
				#{clsVo.clsId, jdbcType=VARCHAR}
				</foreach>
				<!-- <if test="storId != null and storId != ''"> AND STOR_ID = #{storId, jdbcType=VARCHAR}</if> -->
				GROUP BY DOC_GRP_ID
				) C
				ON C.DOC_GRP_ID = D.SUB_DOC_GRP_ID
			</if>
			<!-- 키워드 목록 조회 -->
			<if test="kwdNm != null and kwdNm != ''">
				INNER JOIN ( SELECT DOC_GRP_ID FROM DM_${tableName}_KWD_L K WHERE KWD_NM = #{kwdNm, jdbcType=VARCHAR}
				<!-- <if test="storId != null and storId != ''"> AND STOR_ID = #{storId, jdbcType=VARCHAR}</if> -->
				GROUP BY DOC_GRP_ID
				) KWD
				ON KWD.DOC_GRP_ID = D.SUB_DOC_GRP_ID
			</if>
			<if test="schCat == 'kwd' and schWord != null and schWord != ''">
				INNER JOIN ( SELECT DOC_GRP_ID FROM DM_${tableName}_KWD_L K WHERE KWD_NM LIKE '%' || #{schWord, jdbcType=VARCHAR} || '%'
				<!-- <if test="storId != null and storId != ''"> AND STOR_ID = #{storId, jdbcType=VARCHAR}</if> -->
				GROUP BY DOC_GRP_ID
				) K
				ON K.DOC_GRP_ID = D.SUB_DOC_GRP_ID
			</if>
			<!-- 심의문서[상신] -->
			<if test='discYn != null and discYn !="" and "Y".equals(discYn)'>
				INNER JOIN DM_SUBM_L S ON S.DOC_GRP_ID = D.DOC_GRP_ID 
				<if test="submrUid != null and submrUid !=''"> AND S.REGR_UID = #{submrUid, jdbcType=VARCHAR} <!-- AND S.STAT_CD IN('S','R') --></if>
				<if test="discrUid != null and discrUid !=''"> AND S.DISCR_UID = #{discrUid, jdbcType=VARCHAR}</if>
				<if test="compId != null and compId != ''"> AND S.COMP_ID = #{compId, jdbcType=VARCHAR}</if>
				<if test="discStatCd != null and discStatCd != ''"> AND S.STAT_CD = #{discStatCd, jdbcType=VARCHAR}</if>
			</if>
			<!-- 즐겨찾기 -->
			<if test='dmBumkBVo != null'>
				INNER JOIN DM_BUMK_B BK ON BK.REGR_UID = #{dmBumkBVo.regrUid, jdbcType=VARCHAR} AND BK.BUMK_CAT = #{dmBumkBVo.bumkCat, jdbcType=VARCHAR}
				<if test="bumkId != null and bumkId != ''"> AND BK.BUMK_ID = #{bumkId, jdbcType=VARCHAR}</if>
				INNER JOIN DM_BUMK_L BL ON BK.BUMK_ID = BL.BUMK_ID AND BL.REG_CAT = 'D' AND BL.CAT_VA = T.DOC_GRP_ID 
				<if test="storId != null and storId != ''"> AND BL.STOR_ID = #{storId, jdbcType=VARCHAR}</if>
			</if>
			<!-- 인수대기문서 -->
			<if test='dmTakovrBVo != null'>
				INNER JOIN DM_TAKOVR_B TAK ON TAK.DOC_GRP_ID = D.DOC_GRP_ID
				<if test="dmTakovrBVo.compYn != null and dmTakovrBVo.compYn !=''"> AND TAK.COMP_YN = #{dmTakovrBVo.compYn, jdbcType=CHAR}</if>
				<if test="dmTakovrBVo.tgtOrgId != null and dmTakovrBVo.tgtOrgId !=''"> AND TAK.TGT_ORG_ID = #{dmTakovrBVo.tgtOrgId, jdbcType=VARCHAR} AND TAK.TAK_STAT_CD = 'O'</if> 
				<if test="dmTakovrBVo.takOrgId != null and dmTakovrBVo.takOrgId !=''"> AND TAK.TAK_ORG_ID = #{dmTakovrBVo.takOrgId, jdbcType=VARCHAR} AND TAK.TAK_STAT_CD IN('O','R') </if>
				<if test="storId != null and storId != ''"> AND TAK.STOR_ID = #{storId, jdbcType=VARCHAR}</if>
			</if>
			<!-- 이관대기문서 -->
			<if test='statCd != null and statCd !="" and "M".equals(statCd)' >
				INNER JOIN DM_DOC_TRAN_L DDT ON DDT.DOC_GRP_ID = D.DOC_GRP_ID
				<if test="tranId != null and tranId != ''"> AND DDT.TRAN_ID = #{tranId, jdbcType=VARCHAR}</if> 
			</if>
			<!-- 문서열람요청,승인 -->
			<if test='dmPubDocTgtDVo != null'>
				INNER JOIN (SELECT PUB.DOC_GRP_ID, PUB.TGT_ID, 
									CASE WHEN PUB.TGT_TYP_CD = 'D' THEN (SELECT RESC_VA FROM OR_RESC_B WHERE RESC_ID = (SELECT RESC_ID FROM OR_ORG_B WHERE ORG_ID = PUB.TGT_ID) AND LANG_TYP_CD = NVL(#{queryLang, jdbcType=VARCHAR},'ko') )
										ELSE (SELECT RESC_VA FROM OR_RESC_B WHERE RESC_ID = (SELECT RESC_ID FROM OR_USER_B WHERE USER_UID = PUB.TGT_ID) AND LANG_TYP_CD = NVL(#{queryLang, jdbcType=VARCHAR},'ko'))
										END TGT_NM,
									PUB.TGT_TYP_CD, PUB.STAT_CD AS VIEW_REQ_STAT_CD,
									PUB.READ_STRT_DT, PUB.READ_END_DT, 
									PUB.REGR_UID AS REQ_USER_UID, PUB.REG_DT AS REQ_DT, PUB.RJT_OPIN,
								(SELECT RESC_VA FROM OR_RESC_B WHERE RESC_ID = (SELECT RESC_ID FROM OR_USER_B WHERE USER_UID = PUB.REGR_UID) AND LANG_TYP_CD = NVL(#{queryLang, jdbcType=VARCHAR},'ko')) REQ_USER_NM
								FROM DM_PUB_DOC_TGT_D PUB INNER JOIN DM_STOR_DOC_R STOR ON PUB.DOC_GRP_ID = STOR.DOC_GRP_ID
								<if test="storId != null and storId != ''"> AND STOR.STOR_ID = #{storId, jdbcType=VARCHAR}</if>
								<where>
								<if test="dmPubDocTgtDVo.statCd != null and dmPubDocTgtDVo.statCd != ''">AND PUB.STAT_CD = #{dmPubDocTgtDVo.statCd, jdbcType=VARCHAR}</if>
								<if test='dmPubDocTgtDVo.srchOrgId != null and dmPubDocTgtDVo.srchOrgId !="" and dmPubDocTgtDVo.srchUserUid != null and dmPubDocTgtDVo.srchUserUid !=""'>
								AND ((PUB.TGT_TYP_CD = 'D' AND PUB.TGT_ID = #{dmPubDocTgtDVo.srchOrgId, jdbcType=VARCHAR}) OR (PUB.TGT_TYP_CD = 'U' AND PUB.TGT_ID = #{dmPubDocTgtDVo.srchUserUid, jdbcType=VARCHAR})
									<!-- <if test='srchUserUid != null and srchUserUid !=""'>OR PUB.REGR_UID = #{srchUserUid, jdbcType=VARCHAR}</if> -->
								) <![CDATA[AND TO_CHAR( PUB.READ_END_DT, 'YYYY-MM-DD') >= TO_CHAR(SYSDATE, 'YYYY-MM-DD')]]>								
								  <![CDATA[AND TO_CHAR( PUB.READ_STRT_DT, 'YYYY-MM-DD') <= TO_CHAR(SYSDATE, 'YYYY-MM-DD')]]>
							    </if>
							    </where>
								) PUB ON T.DOC_GRP_ID = PUB.DOC_GRP_ID
			</if>
		</if>
	</sql>
	<!-- 정렬조건[계층형 문서 형태] : 계층형 무시하고 컬럼 정렬 조건이 우선되게 바뀜으로서 현재 사용안함 -->
	<sql id="selectDmDocLOrderBy">
		<trim prefix="" suffix="" suffixOverrides=",">
			<if test='withSubYn != null and "Y".equals(withSubYn)'>
				(CASE WHEN SUB_YN = 'N' THEN DOC_GRP_ID ELSE SUB_DOC_GRP_ID END) ASC, SUB_DOC_GRP_ID DESC, SORT_ORDR ASC,
			</if>
			<if test="orderBy != null">${orderBy}</if>
		</trim>
	</sql>
	<!-- 목록조회 -->
	<select id="selectDmDocL" resultMap="dmDocLMap" parameterType="DmDocLVo" >
		/* com.innobiz.orange.web.dm.dao.DmDocLDao.selectDmDocL */
		<if test="pageNo != null and pageRowCnt != null">
		SELECT
		<trim prefix="" suffix="" suffixOverrides=",">
			M.*,
			<if test="tableName != null and tableName != ''">
			(SELECT VER_VA FROM DM_${tableName}_DOC_VER_L V WHERE V.DOC_GRP_ID = M.DOC_GRP_ID AND V.DOC_ID = M.DOC_ID) AS VER_VA,
			(SELECT RESC_VA FROM OR_RESC_B WHERE RESC_ID = (SELECT RESC_ID FROM OR_USER_B WHERE USER_UID = M.OWNR_UID) AND LANG_TYP_CD = NVL(#{queryLang, jdbcType=VARCHAR},'ko')) OWNR_NM,
			(SELECT RESC_VA FROM PT_RESC_B WHERE RESC_ID = (SELECT RESC_ID FROM PT_CD_B WHERE CLS_CD = 'DOC_KEEP_PRD_CD' AND CD = M.DOC_KEEP_PRD_CD) AND LANG_TYP_CD = NVL(#{queryLang, jdbcType=VARCHAR},'ko')) DOC_KEEP_PRD_NM,
			(SELECT RESC_VA FROM PT_RESC_B WHERE RESC_ID = (SELECT RESC_ID FROM PT_CD_B WHERE CLS_CD = 'SECUL_CD' AND CD = M.SECUL_CD) AND LANG_TYP_CD = NVL(#{queryLang, jdbcType=VARCHAR},'ko')) SECUL_NM,
			(SELECT RESC_VA FROM DM_RESC_B WHERE STOR_ID = #{storId, jdbcType=VARCHAR} AND RESC_ID = (SELECT RESC_ID FROM DM_FLD_B WHERE STOR_ID = #{storId, jdbcType=VARCHAR} AND FLD_ID = M.FLD_ID) AND LANG_TYP_CD = NVL(#{queryLang, jdbcType=VARCHAR},'ko')) AS FLD_NM,
			<!-- 심의문서[상신] -->
			<if test='discYn != null and discYn !="" and "Y".equals(discYn)'>
				(SELECT RESC_VA FROM PT_RESC_B WHERE RESC_ID = (SELECT RESC_ID FROM PT_CD_B WHERE CLS_CD = 'VIEW_STAT_CD' AND CD = M.DISC_STAT_CD) AND LANG_TYP_CD = NVL(#{queryLang, jdbcType=VARCHAR},'ko')) DISC_STAT_NM,
			</if>
			<!-- 인수인계 -->
			<if test='dmTakovrBVo != null'>
			CASE WHEN M.COMP_YN = 'Y' THEN (SELECT RESC_VA FROM PT_RESC_D WHERE RESC_ID = (SELECT RESC_ID FROM PT_COMP_B WHERE COMP_ID = M.TAK_ORG_ID) AND COMP_ID = M.TAK_ORG_ID AND LANG_TYP_CD = NVL(#{queryLang, jdbcType=VARCHAR},'ko') )
					ELSE (SELECT RESC_VA FROM OR_RESC_B WHERE RESC_ID = (SELECT RESC_ID FROM OR_ORG_B WHERE ORG_ID = M.TAK_ORG_ID) AND LANG_TYP_CD = NVL(#{queryLang, jdbcType=VARCHAR},'ko') ) END TAK_ORG_NM,
				CASE WHEN M.COMP_YN = 'Y' THEN (SELECT RESC_VA FROM PT_RESC_D WHERE RESC_ID = (SELECT RESC_ID FROM PT_COMP_B WHERE COMP_ID = M.TGT_ORG_ID) AND COMP_ID = M.TGT_ORG_ID AND LANG_TYP_CD = NVL(#{queryLang, jdbcType=VARCHAR},'ko') )
					ELSE (SELECT RESC_VA FROM OR_RESC_B WHERE RESC_ID = (SELECT RESC_ID FROM OR_ORG_B WHERE ORG_ID = M.TGT_ORG_ID) AND LANG_TYP_CD = NVL(#{queryLang, jdbcType=VARCHAR},'ko') ) END TGT_ORG_NM,
			(SELECT RESC_VA FROM PT_RESC_B WHERE RESC_ID = (SELECT RESC_ID FROM PT_CD_B WHERE CLS_CD = 'TAK_STAT_CD' AND CD = M.TAK_STAT_CD) AND LANG_TYP_CD = NVL(#{queryLang, jdbcType=VARCHAR},'ko')) TAK_STAT_NM,
			</if>
			<!-- 문서열람요청,승인 -->
			<if test='dmPubDocTgtDVo != null'>
			(SELECT RESC_VA FROM PT_RESC_B WHERE RESC_ID = (SELECT RESC_ID FROM PT_CD_B WHERE CLS_CD = 'VIEW_TGT_CD' AND CD = M.TGT_TYP_CD) AND LANG_TYP_CD = NVL(#{queryLang, jdbcType=VARCHAR},'ko')) TGT_TYP_NM,
			(SELECT RESC_VA FROM PT_RESC_B WHERE RESC_ID = (SELECT RESC_ID FROM PT_CD_B WHERE CLS_CD = 'VIEW_STAT_CD' AND CD = M.VIEW_REQ_STAT_CD) AND LANG_TYP_CD = NVL(#{queryLang, jdbcType=VARCHAR},'ko')) VIEW_REQ_STAT_NM,
			</if>
			</if>
			<if test="tableName == null or tableName == ''">
			(SELECT RESC_VA FROM DM_COMM_RESC_B WHERE RESC_ID = (SELECT RESC_ID FROM DM_COMM_FLD_B WHERE FLD_ID = M.FLD_ID) AND LANG_TYP_CD = NVL(#{queryLang, jdbcType=VARCHAR},'ko')) AS FLD_NM,
			</if>
			(SELECT RESC_VA FROM OR_RESC_B WHERE RESC_ID = (SELECT RESC_ID FROM OR_USER_B WHERE USER_UID = M.REGR_UID) AND LANG_TYP_CD = NVL(#{queryLang, jdbcType=VARCHAR},'ko')) REGR_NM,
			(SELECT RESC_VA FROM OR_RESC_B WHERE RESC_ID = (SELECT RESC_ID FROM OR_USER_B WHERE USER_UID = M.MODR_UID) AND LANG_TYP_CD = NVL(#{queryLang, jdbcType=VARCHAR}, 'ko')) MODR_NM,
		</trim>
		FROM (
		</if>
		SELECT
		<trim prefix="" suffix="" suffixOverrides=",">
			<if test="pageNo != null and pageRowCnt != null">
			* FROM (SELECT N.*, ROWNUM RNUM FROM (SELECT
			</if>
			T.DOC_ID,
			<!-- T.COMP_ID, -->
			<if test="tableName != null and tableName != ''">
			T.DOC_GRP_ID,
			T.DFT_YN,
			D.SUB_YN,
			D.SUB_DOC_GRP_ID,
			D.DOC_PID,
			D.SORT_ORDR,
			D.SORT_DPTH,			
			D.DOC_NO,
			D.OWNR_UID,			
			D.DOC_KEEP_PRD_CD,			
			D.SECUL_CD,			
			D.CMPL_DT,
			D.READ_CNT,
			D.REF_TYP,
			D.REF_ID,
			D.REF_URL,
			D.ORGN_YN,
			<![CDATA[ CASE WHEN D.CMPL_DT IS NOT NULL AND TO_CHAR( D.CMPL_DT, 'YYYY-MM-DD') > #{newDdlnDt, jdbcType=VARCHAR} THEN 'Y' ELSE 'N' END NEW_YN, ]]>
			D.KEEP_PRD_DT,
			D.STAT_CD,
			D.FLD_ID,			
			<!-- 인수인계 -->
			<if test='dmTakovrBVo != null'>
				TAK.TAK_ORG_ID,
				TAK.TGT_ORG_ID,
				TAK.COMP_YN,				
				TAK.TAK_STAT_CD,				
				TAK.TAK_REG_DT,
			</if>
			<!-- 이관대기 -->
			<if test='statCd != null and statCd !="" and "M".equals(statCd)' >
				DDT.ERR_CONT,
				DDT.TRAN_ID,
			</if>
			<!-- 문서열람요청,승인 -->
			<if test='dmPubDocTgtDVo != null'>
				PUB.TGT_ID,
				PUB.TGT_NM,
				PUB.TGT_TYP_CD,				
				PUB.VIEW_REQ_STAT_CD,				
				PUB.READ_STRT_DT,
				PUB.READ_END_DT,
				PUB.REQ_USER_UID, 
				PUB.REQ_USER_NM,
				PUB.REQ_DT,
				PUB.RJT_OPIN,
			</if>
			<!-- 심의문서[상신] -->
			<if test='discYn != null and discYn !="" and "Y".equals(discYn)'>
				S.STAT_CD AS DISC_STAT_CD,
			</if>
			</if>
			<if test="tableName == null or tableName == ''">
				T.COMP_ID,
				T.FLD_ID,				
			</if>			
			T.SUBJ,
			<if test="withLob">T.CONT,</if>
			T.REGR_UID,
			T.REG_DT,			
			T.MODR_UID,
			T.MOD_DT,			
			<if test="addItemNmList != null"><foreach item="colmNm" index="index" collection="addItemNmList" >
			T.${colmNm},
			</foreach></if>
			<if test="dispOrdr != null and dispOrdr != ''">${dispOrdr}</if><if test="dispOrdr == null or dispOrdr == ''">NULL </if> DISP_ORDR,
			<if test="pageNo == null or pageRowCnt == null">
				<if test="tableName != null and tableName != ''">
				(SELECT VER_VA FROM DM_${tableName}_DOC_VER_L V WHERE V.DOC_GRP_ID = T.DOC_GRP_ID AND V.DOC_ID = T.DOC_ID) AS VER_VA,
				(SELECT RESC_VA FROM OR_RESC_B WHERE RESC_ID = (SELECT RESC_ID FROM OR_USER_B WHERE USER_UID = D.OWNR_UID) AND LANG_TYP_CD = NVL(#{queryLang, jdbcType=VARCHAR},'ko')) OWNR_NM,
				(SELECT RESC_VA FROM PT_RESC_B WHERE RESC_ID = (SELECT RESC_ID FROM PT_CD_B WHERE CLS_CD = 'DOC_KEEP_PRD_CD' AND CD = D.DOC_KEEP_PRD_CD) AND LANG_TYP_CD = NVL(#{queryLang, jdbcType=VARCHAR},'ko')) DOC_KEEP_PRD_NM,
				(SELECT RESC_VA FROM PT_RESC_B WHERE RESC_ID = (SELECT RESC_ID FROM PT_CD_B WHERE CLS_CD = 'SECUL_CD' AND CD = D.SECUL_CD) AND LANG_TYP_CD = NVL(#{queryLang, jdbcType=VARCHAR},'ko')) SECUL_NM,
				(SELECT RESC_VA FROM DM_RESC_B WHERE STOR_ID = #{storId, jdbcType=VARCHAR} AND RESC_ID = (SELECT RESC_ID FROM DM_FLD_B WHERE STOR_ID = #{storId, jdbcType=VARCHAR} AND FLD_ID = D.FLD_ID) AND LANG_TYP_CD = NVL(#{queryLang, jdbcType=VARCHAR},'ko')) AS FLD_NM,
				<!-- 심의문서[상신] -->
				<if test='discYn != null and discYn !="" and "Y".equals(discYn)'>
					(SELECT RESC_VA FROM PT_RESC_B WHERE RESC_ID = (SELECT RESC_ID FROM PT_CD_B WHERE CLS_CD = 'VIEW_STAT_CD' AND CD = S.STAT_CD) AND LANG_TYP_CD = NVL(#{queryLang, jdbcType=VARCHAR},'ko')) DISC_STAT_NM,
				</if>
				<!-- 인수인계 -->
				<if test='dmTakovrBVo != null'>
				CASE WHEN TAK.COMP_YN = 'Y' THEN (SELECT RESC_VA FROM PT_RESC_D WHERE RESC_ID = (SELECT RESC_ID FROM PT_COMP_B WHERE COMP_ID = TAK.TAK_ORG_ID) AND COMP_ID = TAK.TAK_ORG_ID AND LANG_TYP_CD = NVL(#{queryLang, jdbcType=VARCHAR},'ko') )
						ELSE (SELECT RESC_VA FROM OR_RESC_B WHERE RESC_ID = (SELECT RESC_ID FROM OR_ORG_B WHERE ORG_ID = TAK.TAK_ORG_ID) AND LANG_TYP_CD = NVL(#{queryLang, jdbcType=VARCHAR},'ko') ) END TAK_ORG_NM,
					CASE WHEN TAK.COMP_YN = 'Y' THEN (SELECT RESC_VA FROM PT_RESC_D WHERE RESC_ID = (SELECT RESC_ID FROM PT_COMP_B WHERE COMP_ID = TAK.TGT_ORG_ID) AND COMP_ID = TAK.TGT_ORG_ID AND LANG_TYP_CD = NVL(#{queryLang, jdbcType=VARCHAR},'ko') )
						ELSE (SELECT RESC_VA FROM OR_RESC_B WHERE RESC_ID = (SELECT RESC_ID FROM OR_ORG_B WHERE ORG_ID = TAK.TGT_ORG_ID) AND LANG_TYP_CD = NVL(#{queryLang, jdbcType=VARCHAR},'ko') ) END TGT_ORG_NM,
				(SELECT RESC_VA FROM PT_RESC_B WHERE RESC_ID = (SELECT RESC_ID FROM PT_CD_B WHERE CLS_CD = 'TAK_STAT_CD' AND CD = TAK.TAK_STAT_CD) AND LANG_TYP_CD = NVL(#{queryLang, jdbcType=VARCHAR},'ko')) TAK_STAT_NM,
				</if>
				<!-- 문서열람요청,승인 -->
				<if test='dmPubDocTgtDVo != null'>
				(SELECT RESC_VA FROM PT_RESC_B WHERE RESC_ID = (SELECT RESC_ID FROM PT_CD_B WHERE CLS_CD = 'VIEW_TGT_CD' AND CD = PUB.TGT_TYP_CD) AND LANG_TYP_CD = NVL(#{queryLang, jdbcType=VARCHAR},'ko')) TGT_TYP_NM,
				(SELECT RESC_VA FROM PT_RESC_B WHERE RESC_ID = (SELECT RESC_ID FROM PT_CD_B WHERE CLS_CD = 'VIEW_STAT_CD' AND CD = PUB.VIEW_REQ_STAT_CD) AND LANG_TYP_CD = NVL(#{queryLang, jdbcType=VARCHAR},'ko')) VIEW_REQ_STAT_NM,
				</if>
				</if>
				<if test="tableName == null or tableName == ''">
				(SELECT RESC_VA FROM DM_COMM_RESC_B WHERE RESC_ID = (SELECT RESC_ID FROM DM_COMM_FLD_B WHERE FLD_ID = T.FLD_ID) AND LANG_TYP_CD = NVL(#{queryLang, jdbcType=VARCHAR},'ko')) AS FLD_NM,
				</if>
				(SELECT RESC_VA FROM OR_RESC_B WHERE RESC_ID = (SELECT RESC_ID FROM OR_USER_B WHERE USER_UID = T.REGR_UID) AND LANG_TYP_CD = NVL(#{queryLang, jdbcType=VARCHAR},'ko')) REGR_NM,
				(SELECT RESC_VA FROM OR_RESC_B WHERE RESC_ID = (SELECT RESC_ID FROM OR_USER_B WHERE USER_UID = T.MODR_UID) AND LANG_TYP_CD = NVL(#{queryLang, jdbcType=VARCHAR}, 'ko')) MODR_NM,
			</if>
		</trim>
		FROM <if test="tableName != null and tableName != ''">DM_${tableName}_DOC_L</if><if test="tableName == null or tableName == ''">DM_PSN_DOC_L</if> T
		<include refid="selectDmDocLJoin" />
		<where>
			<if test="docId != null and docId != ''"> AND T.DOC_ID = #{docId, jdbcType=VARCHAR}</if>
			<include refid="selectDmDocLWhere"/>
		</where>
		<if test="orderBy != null">ORDER BY ${orderBy}</if>
		<if test="orderBy == null">ORDER BY T.REG_DT DESC </if>
		<!-- ORDER BY <include refid="selectDmDocLOrderBy" /><if test="orderBy == null">T.REG_DT DESC </if> -->
		<if test="pageNo != null and pageRowCnt != null">
		<![CDATA[) N WHERE ROWNUM <= #{pageNo, jdbcType=NUMERIC} * #{pageRowCnt, jdbcType=NUMERIC}) WHERE RNUM > (#{pageNo, jdbcType=NUMERIC} - 1) * #{pageRowCnt, jdbcType=NUMERIC}]]> ) M
		</if>
	</select>
	
	<!-- 목록조회 건수-->
	<select id="countDmDocL" resultType="Integer" parameterType="DmDocLVo" >
		/* com.innobiz.orange.web.dm.dao.DmDocLDao.countDmDocL */
		SELECT COUNT(*) CNT
		FROM <if test="tableName != null and tableName != ''">DM_${tableName}_DOC_L</if><if test="tableName == null or tableName == ''">DM_PSN_DOC_L</if> T
		<include refid="selectDmDocLJoin" />
		<where>
			<if test="docId != null and docId != ''"> AND T.DOC_ID = #{docId, jdbcType=VARCHAR}</if>
			<include refid="selectDmDocLWhere"/>
		</where>
	</select>
		
	<!-- 등록 저장 -->
	<insert id="insertDmDocL" parameterType="DmDocLVo" >
		/* com.innobiz.orange.web.dm.dao.DmDocLDao.insertDmDocL */
		INSERT INTO <if test="tableName != null and tableName != ''">DM_${tableName}_DOC_L</if><if test="tableName == null or tableName == ''">DM_PSN_DOC_L</if>
		<trim prefix="(" suffix=")" suffixOverrides=",">
			DOC_ID,
			<if test="tableName != null and tableName != ''">
			DOC_GRP_ID,
			DFT_YN,
			</if>
			<if test="tableName == null or tableName == ''">
			COMP_ID,
			FLD_ID,
			</if>			
			SUBJ,
			CONT,
			REGR_UID,
			REG_DT,
			MODR_UID,
			MOD_DT,
			<if test="c1 != null">C1,</if>
			<if test="c2 != null">C2,</if>
			<if test="c3 != null">C3,</if>
			<if test="c4 != null">C4,</if>
			<if test="c5 != null">C5,</if>
			<if test="c6 != null">C6,</if>
			<if test="c7 != null">C7,</if>
			<if test="c8 != null">C8,</if>
			<if test="c9 != null">C9,</if>
			<if test="cA != null">CA,</if>
		</trim>
		<trim prefix="VALUES (" suffix=")" suffixOverrides="," >
			#{docId, jdbcType=VARCHAR},
			<if test="tableName == null or tableName == ''">
			#{compId, jdbcType=VARCHAR},
			#{fldId, jdbcType=VARCHAR},
			</if>
			<if test="tableName != null and tableName != ''">
			#{docGrpId, jdbcType=VARCHAR},
			#{dftYn, jdbcType=VARCHAR},
			</if>
			#{subj, jdbcType=NVARCHAR},
			#{cont, jdbcType=NCLOB},
			<if test="regrUid != null">#{regrUid, jdbcType=VARCHAR},</if><if test="regrUid == null">NULL,</if>
			<if test="regDt == 'sysdate'">SYSDATE,</if><if test="regDt == null or regDt == ''">NULL,</if>
			<if test="regDt != null and regDt != '' and regDt != 'sysdate'">TO_DATE(#{regDt, jdbcType=VARCHAR}, 'YYYY-MM-DD HH24:MI:SS'),</if>
			<if test="modrUid != null">#{modrUid, jdbcType=VARCHAR},</if><if test="modrUid == null">NULL,</if>
			<if test="modDt == 'sysdate'">SYSDATE,</if><if test="modDt == null or modDt == ''">NULL,</if>
			<if test="modDt != null and modDt != '' and modDt != 'sysdate'">TO_DATE(#{modDt, jdbcType=VARCHAR}, 'YYYY-MM-DD HH24:MI:SS'),</if>
			<if test="c1 != null">#{c1, jdbcType=NVARCHAR},</if>
			<if test="c2 != null">#{c2, jdbcType=NVARCHAR},</if>
			<if test="c3 != null">#{c3, jdbcType=NVARCHAR},</if>
			<if test="c4 != null">#{c4, jdbcType=NVARCHAR},</if>
			<if test="c5 != null">#{c5, jdbcType=VARCHAR},</if>
			<if test="c6 != null">#{c6, jdbcType=VARCHAR},</if>
			<if test="c7 != null">#{c7, jdbcType=VARCHAR},</if>
			<if test="c8 != null">#{c8, jdbcType=VARCHAR},</if>
			<if test="c9 != null">#{c9, jdbcType=VARCHAR},</if>
			<if test="cA != null">#{cA, jdbcType=VARCHAR},</if>
		</trim>
	</insert>
	
	<!-- 수정 -->
	<update id="updateDmDocL" parameterType="DmDocLVo" >
		/* com.innobiz.orange.web.dm.dao.DmDocLDao.updateDmDocL */
		UPDATE <if test="tableName != null and tableName != ''">DM_${tableName}_DOC_L</if><if test="tableName == null or tableName == ''">DM_PSN_DOC_L</if>
		<set>
			<if test="tableName != null and tableName != ''">
				<if test="dftYn != null"> DFT_YN = #{dftYn, jdbcType=VARCHAR},</if>
			</if>
			<if test="tableName == null or tableName == ''">
				<if test="fldId != null"> FLD_ID = #{fldId, jdbcType=VARCHAR},</if>
			</if>
			<if test="subj != null"> SUBJ = #{subj, jdbcType=NVARCHAR},</if>
			<if test="cont != null"> CONT = #{cont, jdbcType=NCLOB},</if>
			<if test="regrUid != null"> REGR_UID = #{regrUid, jdbcType=VARCHAR},</if>
			<if test="regDt != null"> 
				<if test="regDt == 'sysdate'"> REG_DT = SYSDATE,</if>
				<if test="regDt == ''"> REG_DT = NULL,</if>
				<if test="regDt != '' and regDt != 'sysdate'"> REG_DT = TO_DATE(#{regDt, jdbcType=VARCHAR}, 'YYYY-MM-DD HH24:MI:SS'),</if>
			</if>
			<if test="modrUid != null"> MODR_UID = #{modrUid, jdbcType=VARCHAR},</if>
			<if test="modDt != null"> 
				<if test="modDt == 'sysdate'"> MOD_DT = SYSDATE,</if>
				<if test="modDt == ''"> MOD_DT = NULL,</if>
				<if test="modDt != '' and modDt != 'sysdate'"> MOD_DT = TO_DATE(#{modDt, jdbcType=VARCHAR}, 'YYYY-MM-DD HH24:MI:SS'),</if>
			</if>
			<if test="c1 != null"> C1 = #{c1, jdbcType=VARCHAR},</if>
			<if test="c2 != null"> C2 = #{c2, jdbcType=VARCHAR},</if>
			<if test="c3 != null"> C3 = #{c3, jdbcType=VARCHAR},</if>
			<if test="c4 != null"> C4 = #{c4, jdbcType=VARCHAR},</if>
			<if test="c5 != null"> C5 = #{c5, jdbcType=VARCHAR},</if>
			<if test="c6 != null"> C6 = #{c6, jdbcType=VARCHAR},</if>
			<if test="c7 != null"> C7 = #{c7, jdbcType=VARCHAR},</if>
			<if test="c8 != null"> C8 = #{c8, jdbcType=VARCHAR},</if>
			<if test="c9 != null"> C9 = #{c9, jdbcType=VARCHAR},</if>
			<if test="cA != null"> CA = #{cA, jdbcType=VARCHAR},</if>
		</set>
		<where>
			<if test="docId != null and docId != ''"> AND DOC_ID = #{docId, jdbcType=VARCHAR}</if>
			<if test="tableName != null and tableName != ''">
				<if test="docGrpId != null and docGrpId !=''"> AND DOC_GRP_ID = #{docGrpId, jdbcType=VARCHAR}</if>
				<!-- <if test="subDocGrpId != null and subDocGrpId !=''"> AND SUB_DOC_GRP_ID = #{subDocGrpId, jdbcType=VARCHAR}</if> -->
			</if>
		</where>
	</update>
	
	<!-- 삭제 -->
	<delete id="deleteDmDocL" parameterType="DmDocLVo" >
		/* com.innobiz.orange.web.dm.dao.DmDocLDao.deleteDmDocL */
		DELETE FROM <if test="tableName != null and tableName != ''">DM_${tableName}_DOC_L</if><if test="tableName == null or tableName == ''">DM_PSN_DOC_L</if>
		<where>
			<if test="docId != null"> AND DOC_ID = #{docId, jdbcType=VARCHAR}</if>
			<if test="tableName != null and tableName != ''"><if test="docGrpId != null and docGrpId !=''"> AND DOC_GRP_ID = #{docGrpId, jdbcType=VARCHAR}</if></if>
		</where>
	</delete>
	
	<!-- 관련글 건수-->
	<select id="countSubDmDocL" resultType="Integer" parameterType="DmDocLVo" >
		/* com.innobiz.orange.web.dm.dao.DmDocLDao.countSubDmDocL */
		SELECT COUNT(*) CNT
		FROM <if test="tableName != null and tableName != ''">DM_${tableName}_DOC_D</if><if test="tableName == null or tableName == ''">DM_PSN_DOC_L</if> T
		<where>
			<if test="subDocGrpId != null and subDocGrpId != ''"> AND T.SUB_DOC_GRP_ID = #{subDocGrpId, jdbcType=VARCHAR}</if>
			<if test="sortOrdr != null and sortOrdr != ''"><![CDATA[ AND T.SORT_ORDR >= #{sortOrdr, jdbcType=VARCHAR} ]]></if>
			<if test="sortDpth != null and sortDpth != ''"><![CDATA[ AND T.SORT_DPTH >= #{sortDpth, jdbcType=VARCHAR} ]]></if>
			<if test="statCd != null and statCd != ''"><![CDATA[ AND D.STAT_CD = #{statCd, jdbcType=VARCHAR} ]]></if>
		</where>
	</select>
	
	<!-- 하위문서의 정렬순서 -->
	<select id="selectMinSortOrdr" resultType="int" parameterType="DmDocLVo" >
		/* com.innobiz.orange.web.dm.dao.DmDocLDao.selectMinSortOrdr */
		SELECT MIN(SORT_ORDR) SORT_ORDR
		FROM <if test="tableName != null and tableName != ''">DM_${tableName}_DOC_D</if><if test="tableName == null or tableName == ''">DM_PSN_DOC_L</if> T
		<where>
			<![CDATA[
			AND T.SUB_YN = #{subYn, jdbcType=VARCHAR}
			AND T.SUB_DOC_GRP_ID = #{subDocGrpId, jdbcType=INTEGER}
			AND T.SORT_ORDR > #{sortOrdr, jdbcType=INTEGER}
			AND T.SORT_DPTH <= #{sortDpth, jdbcType=INTEGER}
			]]>
		</where>
	</select>
	
	<!-- 문서그룹의 정렬순서 -->
	<select id="selectMaxSortOrdr" resultType="int" parameterType="DmDocLVo" >
		/* com.innobiz.orange.web.dm.dao.DmDocLDao.selectMaxSortOrdr */
		SELECT MAX(SORT_ORDR) SORT_ORDR
		FROM <if test="tableName != null and tableName != ''">DM_${tableName}_DOC_D</if><if test="tableName == null or tableName == ''">DM_PSN_DOC_L</if> T
		<where>
			<!-- AND T.SUB_YN = #{subYn, jdbcType=VARCHAR} -->
			AND T.SUB_DOC_GRP_ID = #{subDocGrpId, jdbcType=INTEGER}
		</where>
	</select>
	
	<!-- 부모 문서의 상위로 순서 변경 -->
	<update id="updateSortOrdr" parameterType="DmDocLVo" >
		/* com.innobiz.orange.web.dm.dao.DmDocLDao.updateSortOrdr */
		UPDATE <if test="tableName != null and tableName != ''">DM_${tableName}_DOC_D</if><if test="tableName == null or tableName == ''">DM_PSN_DOC_L</if>
		<set>
			SORT_ORDR = SORT_ORDR + 1,
		</set>
		<where>
			AND SUB_YN = #{subYn, jdbcType=VARCHAR}
			AND SUB_DOC_GRP_ID = #{subDocGrpId, jdbcType=VARCHAR}
			<![CDATA[AND SORT_ORDR >= #{sortOrdr, jdbcType=INTEGER}]]>
		</where>
	</update>
	
	<!-- 이전다음 -->
	<select id="selectNaviDmDocL" resultMap="dmDocLNaviMap" parameterType="DmDocLVo" >
		/* com.innobiz.orange.web.dm.dao.DmDocLDao.selectNaviDmDocL */
		WITH LAG_LEAD_CTE AS(
			SELECT
			<trim prefix="" suffix="" suffixOverrides=",">
				ROW_NUMBER() OVER (ORDER BY <if test="orderBy != null">${orderBy}</if><if test="orderBy == null">L.REG_DT DESC</if>) AS RN, L.DOC_ID
			FROM(
			SELECT 
				T.DOC_ID,
				<if test="tableName != null and tableName != ''">
				D.SUB_DOC_GRP_ID,
				D.SORT_ORDR,
			    (SELECT VER_VA FROM DM_${tableName}_DOC_VER_L V WHERE V.DOC_GRP_ID = T.DOC_GRP_ID AND V.DOC_ID = T.DOC_ID) AS VER_VA,
				D.DOC_NO,
				(SELECT RESC_VA FROM OR_RESC_B WHERE RESC_ID = (SELECT RESC_ID FROM OR_USER_B WHERE USER_UID = D.OWNR_UID) AND LANG_TYP_CD = NVL(#{queryLang, jdbcType=VARCHAR},'ko')) OWNR_NM,
				(SELECT RESC_VA FROM PT_RESC_B WHERE RESC_ID = (SELECT RESC_ID FROM PT_CD_B WHERE CLS_CD = 'DOC_KEEP_PRD_CD' AND CD = D.DOC_KEEP_PRD_CD) AND LANG_TYP_CD = NVL(#{queryLang, jdbcType=VARCHAR},'ko')) DOC_KEEP_PRD_NM,
				(SELECT RESC_VA FROM PT_RESC_B WHERE RESC_ID = (SELECT RESC_ID FROM PT_CD_B WHERE CLS_CD = 'SECUL_CD' AND CD = D.SECUL_CD) AND LANG_TYP_CD = NVL(#{queryLang, jdbcType=VARCHAR},'ko')) SECUL_NM,
				D.CMPL_DT,
				(SELECT RESC_VA FROM DM_RESC_B WHERE STOR_ID = #{storId, jdbcType=VARCHAR} AND RESC_ID = (SELECT RESC_ID FROM DM_FLD_B WHERE STOR_ID = #{storId, jdbcType=VARCHAR} AND FLD_ID = D.FLD_ID) AND LANG_TYP_CD = NVL(#{queryLang, jdbcType=VARCHAR},'ko')) AS FLD_NM,					
				</if>				
				T.SUBJ,
				T.REG_DT,
				(SELECT RESC_VA FROM OR_RESC_B WHERE RESC_ID = (SELECT RESC_ID FROM OR_USER_B WHERE USER_UID = T.REGR_UID) AND LANG_TYP_CD = NVL(#{queryLang, jdbcType=VARCHAR},'ko')) REGR_NM,
				T.MOD_DT,
				(SELECT RESC_VA FROM OR_RESC_B WHERE RESC_ID = (SELECT RESC_ID FROM OR_USER_B WHERE USER_UID = T.MODR_UID) AND LANG_TYP_CD = NVL(#{queryLang, jdbcType=VARCHAR}, 'ko')) MODR_NM,
				<if test="addItemNmList != null"><foreach item="colmNm" index="index" collection="addItemNmList" >
				T.${colmNm},
				</foreach></if>
				<if test="dispOrdr != null and dispOrdr != ''">${dispOrdr}</if><if test="dispOrdr == null or dispOrdr == ''">NULL </if> DISP_ORDR,
				</trim>
				FROM <if test="tableName != null and tableName != ''">DM_${tableName}_DOC_L</if><if test="tableName == null or tableName == ''">DM_PSN_DOC_L</if> T
				<include refid="selectDmDocLJoin" />
				<where>
					<include refid="selectDmDocLWhere"/>
				</where>
				<!-- <if test="orderBy != null">ORDER BY ${orderBy}</if>
				<if test="orderBy == null">ORDER BY T.REG_DT DESC </if> -->
			) L
		)
		SELECT T.DOC_ID, P.DOC_ID AS PREV_ID, N.DOC_ID AS NEXT_ID
		FROM LAG_LEAD_CTE T LEFT JOIN LAG_LEAD_CTE P ON T.RN = P.RN + 1
				LEFT JOIN LAG_LEAD_CTE N ON T.RN = N.RN - 1
				WHERE T.DOC_ID = #{docId, jdbcType=INTEGER}
		
		<!-- SELECT
		<trim prefix="" suffix="" suffixOverrides=",">
			TOP 1 DOC_ID, DOC_NO, SUBJ,
		</trim>
		FROM ${tableName} T
		<include refid="selectDmDocLJoin" />
		<where>
			<include refid="selectDmDocLWhere"/>
		</where>
		<if test='naviTyp != null and "prev".equals(naviTyp)'><![CDATA[ AND DOC_ID < #{docId, jdbcType=INTEGER}]]></if>
		<if test='naviTyp != null and "next".equals(naviTyp)'><![CDATA[ AND DOC_ID > #{docId, jdbcType=INTEGER}]]></if> -->
	</select>
	
	<!-- 문서 복사[버전변경 및 부분 이관시 tgtTableName:대상테이블명,tableName:현재테이블명] -->
	<insert id="insertSelectDmDocL" parameterType="DmDocLVo" >
		INSERT INTO ${tgtTableName}
		SELECT *
		FROM <if test="tableName != null and tableName != ''">${tableName}</if><if test="tableName == null or tableName == ''">DM_PSN_DOC_L</if> T <!-- 이관시 이관대상 테이블과의 조인을 통한 select 구문 추가 필요[추후 개발] -->
		<where>
			<if test="docId != null and docId != ''"> AND T.DOC_ID = #{docId, jdbcType=VARCHAR}</if>
			<if test="docGrpId != null and docGrpId !=''"> AND T.DOC_GRP_ID = #{docGrpId, jdbcType=VARCHAR}</if>
			<!-- 다중 조회조건(String) -->
			<if test="whereSqllet != null and whereSqllet != ''"> ${whereSqllet}</if>
		</where>
	</insert>
</mapper>