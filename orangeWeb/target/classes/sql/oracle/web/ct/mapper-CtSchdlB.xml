<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >

<!-- TABLE : CT_SCHDL_B[일정 기본] -->
<mapper namespace="com.innobiz.orange.web.ct.dao.CtSchdlBDao">
                 
	<resultMap id="ctSchdlBMap" type="CtSchdlBVo">
		<id property="schdlId" column="SCHDL_ID" /><!-- 일정ID -->
		<result property="userUid" column="USER_UID" /><!-- 사용자UID -->
		<result property="compId" column="COMP_ID" /><!-- 회사ID -->
		<result property="deptId" column="DEPT_ID" /><!-- 부서ID -->
		<result property="grpId" column="GRP_ID" /><!-- 그룹ID -->
		<result property="schdlTypCd" column="SCHDL_TYP_CD" /><!-- 일정구분코드 -->
		<result property="schdlKndCd" column="SCHDL_KND_CD" /><!-- 일정종류코드 -->
		<result property="openGradCd" column="OPEN_GRAD_CD" /><!-- 공개등급코드 -->
		<result property="schdlStatCd" column="SCHDL_STAT_CD" /><!-- 일정상태코드 -->
		<result property="editorTypCd" column="EDITOR_TYP_CD" /><!-- 에디터구분코드 -->
		<result property="selfRegYn" column="SELF_REG_YN" /><!-- 본인입력여부 -->
		<result property="schdlStartDt" column="SCHDL_START_DT" /><!-- 일정시작일시 -->
		<result property="schdlEndDt" column="SCHDL_END_DT" /><!-- 일정종료일시 -->
		<result property="repetYn" column="REPET_YN" /><!-- 반복여부 -->
		<result property="holiYn" column="HOLI_YN" /><!-- 휴일여부 -->
		<result property="solaLunaYn" column="SOLA_LUNA_YN" /><!-- 양음력여부 -->
		<result property="subj" column="SUBJ" /><!-- 제목 -->
		<result property="locNm" column="LOC_NM" /><!-- 장소명 -->
		<result property="locLatdLotdVa" column="LOC_LATD_LOTD_VA" /><!-- 장소위도경도값 -->
		<result property="cont" column="CONT" /><!-- 내용 -->
		<result property="workPrioOrdr" column="WORK_PRIO_ORDR" /><!-- 할일우선순서 -->
		<result property="workCmltYmd" column="WORK_CMLT_YMD" /><!-- 할일완료년월일 -->
		<result property="attYn" column="ATT_YN" /><!-- 첨부여부 -->
		<result property="regrUid" column="REGR_UID" /><!-- 등록자UID -->
		<result property="regrNm" column="REGR_NM" /><!-- 등록자명 -->
		<result property="regDt" column="REG_DT" /><!-- 등록일시 -->
		<result property="modDt" column="MOD_DT" /><!-- 수정일시 -->
		<result property="modrUid" column="MODR_UID" /><!-- 수정자UID -->
		<result property="schdlFileId" column="SCHDL_FILE_ID" /><!-- 일정파일ID -->
		<result property="schdlPid" column="SCHDL_PID" /><!-- 일정 부모ID -->
		<result property="schdlYm" column="SCHDL_YM" /><!-- 해당 월별 년월 -->
		<result property="schdlPrevYm" column="SCHDL_PREVYM" /><!-- 이전 월별 년월 -->
		<result property="schdlNextYm" column="SCHDL_NEXTYM" /><!-- 이후 월별 년월 -->
		
		<result property="searchPromChk" column="SEARCH_PROM_CHK" /><!-- 검색약속체크 -->
		<result property="searchWorkChk" column="SEARCH_WORK_CHK" /><!-- 검색할일체크  -->
		<result property="searchEvntChk" column="SEARCH_EVNT_CHK" /><!-- 검색행사체크 -->
		<result property="searchAnnvChk" column="SEARCH_ANNV_CHK" /><!-- 검색기념일체크 -->
		<result property="searchPsnChk" column="SEARCH_PSN_CHK" /><!-- 검색개인체크 -->
		<result property="searchDeptChk" column="SEARCH_DEPT_CHK" /><!-- 검색부서체크 -->
		<result property="searchCompChk" column="SEARCH_COMP_CHK" /><!-- 검색회사체크 -->
		<result property="searchGrpChk" column="SEARCH_GRP_CHK" /><!-- 검색그룹체크 -->
		
		<result property="startHour" column="STARTHOUR" /><!-- 해당날짜의 시작시간 -->
		<result property="endHour" column="ENDHOUR" /><!-- 해당날짜의 종료 시간 -->
		
		<result property="repetStartDt" column="REPET_START_DT"/><!-- 반복시작일시 -->
		<result property="repetEndDt" column="REPET_END_DT"/><!-- 반복시작일시 -->
		
		<result property="schdlTypNm" column="SCHDL_TYP_NM"/><!-- 일정구분명 -->
		<result property="alldayYn" column="ALLDAY_YN"/><!-- 종일여부 -->
		<result property="grpNm" column="GRP_NM"/><!-- 그룹명 -->
		<result property="afterDay" column="AFTER_DAY"/><!-- 기간별 일수차 -->
		
		<result property="ctId" column="CT_ID" /><!--커뮤니티 ID-->
		<result property="ctFncId" column="CT_FNC_ID" /><!--커뮤니티 기능 ID-->
		<result property="ctFncLocStep" column="CT_FNC_LOC_STEP" /><!-- 커뮤니티 기능 위치 단계 -->
	  <result property="ctFncUid" column="CT_FNC_UID" /><!-- 커뮤니티 기능 UID -->
	  <result property="ctFncPid" column="CT_FNC_PID" /><!-- 커뮤니티 기능 부모ID -->
	  
	  <result property="ctNm" column="CT_NM" /><!--커뮤니티 명-->
		<result property="langTyp" column="LANG_TYP" /><!-- 사용자 언어 타입 코드 -->
		 <!-- 커뮤니티 자료검색  -->
	  <result property="fncNm" column="FNC_NM" /><!-- 기능명 -->
	  <result property="strtDt" column="START_DT" /><!--시작 일시-->
		<result property="endDt" column="END_DT" /><!--종료 일시-->
		<result property="ctFncUrl" column="CT_FNC_URL" /><!--커뮤니티 기능 URL -->
		<result property="relTblSubj" column="REL_TBL_SUBJ" /><!--관계테이블명 -->
		<result property="mastNm" column="MAST_NM" /><!-- 마스터명 -->
		<result property="mastUid" column="MAST_UID" /><!-- 마스터UID -->
		
	</resultMap>

	<!-- 조회조건 -->
	<sql id="selectCtSchdlBWhere">
		<where>
			<if test="schdlId != null and schdlId !=''"> AND WS_T.SCHDL_ID = #{schdlId, jdbcType=VARCHAR}</if>
			<if test="ctId != null and ctId !=''"> AND WS_T.CT_ID = #{ctId, jdbcType=VARCHAR}</if>
			<if test="ctFncId != null and ctFncId !=''"> AND WS_T.CT_FNC_ID = #{ctFncId, jdbcType=VARCHAR}</if>
			<if test="ctFncLocStep != null and ctFncLocStep !=''"> AND WS_T.CT_FNC_LOC_STEP = #{ctFncLocStep, jdbcType=VARCHAR}</if>
			<if test="ctFncUid != null and ctFncUid !=''"> AND WS_T.CT_FNC_UID = #{ctFncUid, jdbcType=VARCHAR}</if>
			<if test="ctFncPid != null and ctFncPid !=''"> AND WS_T.CT_FNC_PID = #{ctFncPid, jdbcType=VARCHAR}</if>
			
			<if test="schdlPid != null and schdlPid !=''"> AND WS_T.SCHDL_PID = #{schdlPid, jdbcType=CHAR}</if>
			<if test="schWord != null and schWord !=''">AND WS_T.SUBJ LIKE '%'||#{schWord, jdbcType=VARCHAR}||'%'
			</if>
			<if test="schdlTypCd != null and schdlTypCd != ''">AND  WS_T.SCHDL_TYP_CD = #{schdlTypCd, jdbcType=VARCHAR} 
			  <if test="schdlPid == null or schdlPid == ''">AND  WS_T.SCHDL_ID=(SELECT DISTINCT SCHDL_PID)</if>
			</if>

			<if test="schdlStartDt != null and schdlStartDt !=''">
			AND (
				TO_CHAR(WS_T.SCHDL_START_DT, 'YYYY-MM-DD') BETWEEN #{schdlStartDt, jdbcType=VARCHAR} AND #{schdlEndDt, jdbcType=VARCHAR}
				OR TO_CHAR(WS_T.SCHDL_END_DT, 'YYYY-MM-DD') BETWEEN #{schdlStartDt, jdbcType=VARCHAR} AND #{schdlEndDt, jdbcType=VARCHAR}
			)
       		</if>
       		<if test="ctIdList != null">
       		AND CT_ID IN <foreach collection="ctIdList" item="item" index="index" separator="," open="(" close=")">#{item, jdbcType=VARCHAR}</foreach>				
			</if>
			
       		<if test="schdlTypCd == null or schdlTypCd == ''">
       		  AND WS_T.SCHDL_TYP_CD != '5'	
       		</if>
			<if test="searchPromChk != null and searchPromChk != '' 
			    or  searchWorkChk != null and searchWorkChk != ''
			    or  searchEvntChk != null and searchEvntChk != ''
			    or  searchAnnvChk != null and searchAnnvChk != '' ">
			AND ( WS_T.SCHDL_TYP_CD =  #{searchPromChk, jdbcType=VARCHAR}	
				OR WS_T.SCHDL_TYP_CD =  #{searchWorkChk, jdbcType=VARCHAR}
				OR WS_T.SCHDL_TYP_CD =  #{searchEvntChk, jdbcType=VARCHAR}
				OR WS_T.SCHDL_TYP_CD =  #{searchAnnvChk, jdbcType=VARCHAR}
			)
			</if>
			<if test="searchPsnChk != null and searchPsnChk != '' 
			    or  searchDeptChk != null and searchDeptChk != ''
			    or  searchCompChk != null and searchCompChk != ''
			    or  searchGrpChk != null and searchGrpChk != '' ">
			AND (WS_T.SCHDL_KND_CD =  #{searchPsnChk, jdbcType=VARCHAR}
				OR WS_T.SCHDL_KND_CD =  #{searchDeptChk, jdbcType=VARCHAR}
				OR WS_T.SCHDL_KND_CD =  #{searchCompChk, jdbcType=VARCHAR}
				OR WS_T.SCHDL_KND_CD =  #{searchGrpChk, jdbcType=VARCHAR}
			 )
			</if>	
			<if test="compId != null and compId !=''"> AND WS_T.COMP_ID = #{compId, jdbcType=VARCHAR}</if>
			<!-- 추가 -->
			<if test="whereSqllet != null and whereSqllet != ''"> ${whereSqllet}</if>
			<if test="repetYn != null and repetYn !=''"> AND WS_T.REPET_YN = #{repetYn, jdbcType=VARCHAR}</if>	
		</where>
	</sql>
	
	<!-- 목록조회 -->
	<select id="selectCtSchdlB" resultMap="ctSchdlBMap" parameterType="CtSchdlBVo" >
		/* com.innobiz.orange.web.ct.dao.CtSchdlBDao.selectCtSchdlB */
		<if test="pageNo != null and pageRowCnt != null">
		SELECT * FROM (
		</if>
		SELECT
		<trim prefix="" suffix="" suffixOverrides=",">
			<if test="pageNo != null and pageRowCnt != null">
			* FROM (SELECT N.*, ROWNUM RNUM FROM (SELECT
			</if>
			WS_T.SCHDL_ID,
			WS_T.USER_UID,
			WS_T.COMP_ID,
			WS_T.DEPT_ID,
			WS_T.GRP_ID,
			WS_T.SCHDL_TYP_CD,
			WS_T.SCHDL_KND_CD,
			WS_T.OPEN_GRAD_CD,
			WS_T.SCHDL_STAT_CD,
			WS_T.EDITOR_TYP_CD,
			WS_T.SELF_REG_YN,
			WS_T.SCHDL_START_DT,
			WS_T.SCHDL_END_DT,
			WS_T.REPET_YN,
			WS_T.HOLI_YN,
			WS_T.SOLA_LUNA_YN,
			WS_T.SUBJ,
			WS_T.LOC_NM,
			WS_T.LOC_LATD_LOTD_VA,
			<if test="withLob">WS_T.CONT,</if>
			WS_T.WORK_PRIO_ORDR,
			WS_T.WORK_CMLT_YMD,
			WS_T.ATT_YN,
			WS_T.REGR_UID,
			WS_T.REGR_NM,
			WS_T.REG_DT,
			WS_T.MOD_DT,
			WS_T.MODR_UID,
			WS_T.SCHDL_FILE_ID,
			WS_T.SCHDL_PID,
			WS_T.ALLDAY_YN,
			WS_T.CT_ID,
			WS_T.CT_FNC_ID,
			WS_T.CT_FNC_LOC_STEP,
			WS_T.CT_FNC_UID,
			WS_T.CT_FNC_PID,
			(SELECT REPET_START_DT FROM WC_REPET_SETUP_D WHERE SCHDL_ID = WS_T.SCHDL_ID) REPET_START_DT,
			(SELECT REPET_END_DT FROM WC_REPET_SETUP_D WHERE SCHDL_ID = WS_T.SCHDL_ID) REPET_END_DT,
			(SELECT RESC_VA FROM CT_RESC_B WHERE RESC_ID = (SELECT RESC_ID FROM CT_SCHDL_CAT_CLS_B WHERE CAT_ID = WS_T.SCHDL_TYP_CD) AND LANG_TYP_CD = NVL(#{queryLang, jdbcType=VARCHAR},'ko') ) AS SCHDL_TYP_NM ,
			(SELECT GRP_NM FROM WC_SCHDL_GRP_B WSG_T WHERE WS_T.GRP_ID = WSG_T.SCHDL_GRP_ID) AS GRP_NM,
			FLOOR(WS_T.SCHDL_END_DT - WS_T.SCHDL_START_DT) AS AFTER_DAY,
			(
				SELECT RESC_VA 
				FROM CT_RESC_B
				WHERE RESC_ID = (SELECT CT_SUBJ_RESC FROM CT_ESTB_B WHERE CT_ID = WS_T.CT_ID)
				AND LANG_TYP_CD = #{langTyp, jdbcType=VARCHAR}
			) CT_NM,
			(
				SELECT RESC_VA FROM CT_RESC_B
				WHERE LANG_TYP_CD = #{langTyp, jdbcType=VARCHAR}
				AND RESC_ID = (SELECT CT_FNC_SUBJ_RESC_ID FROM CT_FNC_D WHERE CT_FNC_UID = WS_T.CT_FNC_UID)
			) FNC_NM,
			(
				SELECT URL
				FROM CT_FNC_MNG_B
				WHERE WS_T.CT_FNC_ID = CT_FNC_ID
			) CT_FNC_URL,
			(
				SELECT REL_TBL_SUBJ
				FROM CT_FNC_MNG_B
				WHERE WS_T.CT_FNC_ID = CT_FNC_ID
			) REL_TBL_SUBJ,
			(
				SELECT RESC_VA
				FROM OR_RESC_B
				WHERE RESC_ID = (
					SELECT RESC_ID
					FROM OR_USER_B
					WHERE USER_UID = (
						SELECT MAST_UID
						FROM CT_ESTB_B
						WHERE WS_T.CT_ID = CT_ID
					)
				)
				AND LANG_TYP_CD = #{queryLang, jdbcType=VARCHAR}
			) MAST_NM,
			(
				SELECT MAST_UID
				FROM CT_ESTB_B
				WHERE WS_T.CT_ID = CT_ID
			) MAST_UID,
		</trim>
		FROM CT_SCHDL_B WS_T
		<if test="userUid != null">
			INNER JOIN (
				SELECT SCHDL_ID
				FROM CT_SCHDL_B
				WHERE USER_UID = #{userUid, jdbcType=VARCHAR}
					AND SCHDL_KND_CD = '1'
				
				UNION
				
				SELECT SCHDL_ID
				FROM CT_SCHDL_B
				WHERE DEPT_ID = #{deptId, jdbcType=VARCHAR}
					AND SCHDL_KND_CD = '3'
				
				UNION
				
				SELECT SCHDL_ID
				FROM CT_SCHDL_B
				WHERE COMP_ID = #{compId, jdbcType=VARCHAR}
					AND SCHDL_KND_CD = '4'
				
				UNION
				
				SELECT SCHDL_ID
				FROM CT_SCHDL_B
				WHERE SCHDL_KND_CD = '2'
				AND GRP_ID IN (SELECT DISTINCT SCHDL_GRP_ID FROM WC_SCHDL_GRP_MBSH_D WHERE USER_UID= #{userUid, jdbcType=VARCHAR})
				
				UNION
				
				SELECT SCHDL_ID
				FROM CT_SCHDL_B
				WHERE SCHDL_TYP_CD = '5'
			) B ON WS_T.SCHDL_ID = B.SCHDL_ID
		</if>
		<include refid="selectCtSchdlBWhere"/>
		<if test="orderBy != null">ORDER BY ${orderBy}</if>
		<if test="orderBy == null">ORDER BY WS_T.SCHDL_ID</if>
		<if test="pageNo != null and pageRowCnt != null">
		<![CDATA[) N WHERE ROWNUM <= #{pageNo, jdbcType=NUMERIC} * #{pageRowCnt, jdbcType=NUMERIC}) WHERE RNUM > (#{pageNo, jdbcType=NUMERIC} - 1) * #{pageRowCnt, jdbcType=NUMERIC}]]> ) M
		</if>
	</select>

	
	<!-- 일정기간 검색 -->
	<select id="ctselectStartToEndDate" resultMap="ctSchdlBMap" parameterType="CtSchdlBVo">
		/* com.innobiz.orange.web.ct.dao.CtSchdlBDao.selectStartToEndDate */
		SELECT * FROM (
			SELECT COMP_ID,
			USER_UID,
			SCHDL_TYP_CD,
			SUBJ,
			LOC_NM,
			OPEN_GRAD_CD,
			SCHDL_STAT_CD,
			WORK_PRIO_ORDR,
			WORK_CMLT_YMD,
			<if test="withLob">CONT,</if>
			ATT_YN,
			SELF_REG_YN,
			REGR_UID,
			REG_DT,
			EDITOR_TYP_CD,
			SCHDL_ID,
			MOD_DT,
			MODR_UID,
			SCHDL_FILE_ID,
			SCHDL_START_DT,
			SCHDL_END_DT,
			REPET_YN,
			SCHDL_PID,
			NULL AS SCHDL_KND_CD,
			GRP_ID,
			DEPT_ID,
			HOLI_YN,
			SOLA_LUNA_YN,
			LOC_LATD_LOTD_VA,
			REGR_NM,
			ALLDAY_YN,
			FLOOR(SCHDL_END_DT - SCHDL_START_DT) AS AFTER_DAY,
			CT_ID,
			CT_FNC_ID,
			CT_FNC_ORDR,
			CT_FNC_LOC_STEP,
			CT_FNC_UID,
			CT_FNC_PID	
		FROM CT_SCHDL_B 
		WHERE (
				#{schdlPrevYm, jdbcType=VARCHAR} BETWEEN TO_CHAR(SCHDL_START_DT, 'YYYY-MM') AND TO_CHAR(SCHDL_END_DT, 'YYYY-MM')
				OR #{schdlYm, jdbcType=VARCHAR} BETWEEN TO_CHAR(SCHDL_START_DT, 'YYYY-MM') AND TO_CHAR(SCHDL_END_DT, 'YYYY-MM')
				OR #{schdlNextYm, jdbcType=VARCHAR} BETWEEN TO_CHAR(SCHDL_START_DT, 'YYYY-MM') AND TO_CHAR(SCHDL_END_DT, 'YYYY-MM')
				OR SOLA_LUNA_YN ='N'
			)
			AND CT_ID =  #{ctId, jdbcType=VARCHAR}
			<if test="schdlTypCd != null">
			AND SCHDL_TYP_CD = #{schdlTypCd, jdbcType=VARCHAR}
			</if>
		
		UNION ALL
		
		SELECT COMP_ID,
			USER_UID,
			SCHDL_TYP_CD,
			SUBJ,
			LOC_NM,
			OPEN_GRAD_CD,
			SCHDL_STAT_CD,
			WORK_PRIO_ORDR,
			WORK_CMLT_YMD,
			<if test="withLob">CONT,</if>
			ATT_YN,
			SELF_REG_YN,
			REGR_UID,
			REG_DT,
			EDITOR_TYP_CD,
			SCHDL_ID,
			MOD_DT,
			MODR_UID,
			SCHDL_FILE_ID,
			SCHDL_START_DT,
			SCHDL_END_DT,
			REPET_YN,
			SCHDL_PID,
			SCHDL_KND_CD,
			GRP_ID,
			DEPT_ID,
			HOLI_YN,
			SOLA_LUNA_YN,
			LOC_LATD_LOTD_VA,
			REGR_NM,
			ALLDAY_YN,
			FLOOR(SCHDL_END_DT - SCHDL_START_DT) AS AFTER_DAY,
			'' AS CT_ID,
			'' AS CT_FNC_ID,
			0 AS CT_FNC_ORDR,
			'' AS CT_FNC_LOC_STEP,
			'' AS CT_FNC_UID,
			'' AS CT_FNC_PID
		FROM WC_SCHDL_B
		WHERE (
				#{schdlPrevYm, jdbcType=VARCHAR} BETWEEN TO_CHAR(SCHDL_START_DT, 'YYYY-MM') AND TO_CHAR(SCHDL_END_DT, 'YYYY-MM')
				OR #{schdlYm, jdbcType=VARCHAR} BETWEEN TO_CHAR(SCHDL_START_DT, 'YYYY-MM') AND TO_CHAR(SCHDL_END_DT, 'YYYY-MM')
				OR #{schdlNextYm, jdbcType=VARCHAR} BETWEEN TO_CHAR(SCHDL_START_DT, 'YYYY-MM') AND TO_CHAR(SCHDL_END_DT, 'YYYY-MM')
				OR SOLA_LUNA_YN ='N'
			)
			AND SCHDL_TYP_CD='5'
		) C
		ORDER BY SCHDL_START_DT
	</select>
	
	<!-- 빈시간 검색 -->
	<select id="ctselectEmptyTime" resultMap="ctSchdlBMap" parameterType="CtSchdlBVo">
		/* com.innobiz.orange.web.ct.dao.CtSchdlBDao.selectEmptyTime */
		<![CDATA[ 
		SELECT *
		FROM (  
			SELECT
				GUEST_UID AS USER_UID
				,SCHDL_TYP_CD
				,SCHDL_KND_CD
				,SUBJ
				,A.SCHDL_ID
				,CASE WHEN SCHDL_START_DT < TO_DATE(#{schdlStartDt, jdbcType=VARCHAR} || ' 00:00:00', 'YYYY-MM-DD HH24:MI:SS') THEN 0 ELSE TO_NUMBER(TO_CHAR(SCHDL_START_DT,'HH')) END STARTHOUR
				,SCHDL_START_DT
				,CASE WHEN SCHDL_END_DT > TO_DATE(#{schdlStartDt, jdbcType=VARCHAR} || ' 23:59:59', 'YYYY-MM-DD HH24:MI:SS') THEN 23 ELSE  TO_NUMBER(TO_CHAR(SCHDL_END_DT,'HH')) END ENDHOUR
				,SCHDL_END_DT
				,ALLDAY_YN
			FROM CT_SCHDL_B A
				INNER JOIN CT_SCHDL_PROM_GUEST_D B	
				ON A.SCHDL_ID = B.SCHDL_ID						
			
			UNION
			
			SELECT
				USER_UID
				,SCHDL_TYP_CD
				,SCHDL_KND_CD
				,SUBJ
				,A.SCHDL_ID
				,CASE WHEN SCHDL_START_DT < TO_DATE(#{schdlStartDt, jdbcType=VARCHAR} || ' 00:00:00', 'YYYY-MM-DD HH24:MI:SS') THEN 0 ELSE TO_NUMBER(TO_CHAR(SCHDL_START_DT,'HH')) END STARTHOUR
				,SCHDL_START_DT
				,CASE WHEN SCHDL_END_DT > TO_DATE(#{schdlStartDt, jdbcType=VARCHAR} || ' 23:59:59', 'YYYY-MM-DD HH24:MI:SS') THEN 23 ELSE  TO_NUMBER(TO_CHAR(SCHDL_END_DT,'HH')) END ENDHOUR
				,SCHDL_END_DT
				,ALLDAY_YN
			FROM CT_SCHDL_B A
			WHERE A.SCHDL_KND_CD = '1'
		 ) A
		WHERE
		]]>
			USER_UID IN<foreach collection="promGuestLst" item="item" index="index" separator="," open="(" close=")">#{item.guestUid, jdbcType=VARCHAR}</foreach>				
			AND #{schdlStartDt, jdbcType=VARCHAR} BETWEEN TO_CHAR(SCHDL_START_DT, 'YYYY-MM-DD') AND TO_CHAR(SCHDL_END_DT, 'YYYY-MM-DD')
		ORDER BY USER_UID, SCHDL_START_DT
	</select>
	
	
	<!-- 목록조회 건수-->
	<select id="countCtSchdlB" resultType="Integer" parameterType="CtSchdlBVo" >
		/* com.innobiz.orange.web.ct.dao.CtSchdlBDao.countCtSchdlB */
		SELECT COUNT(*) CNT
		FROM CT_SCHDL_B WS_T
		<if test="userUid != null">
			INNER JOIN (
				SELECT SCHDL_ID
				FROM CT_SCHDL_B
				WHERE USER_UID = #{userUid, jdbcType=VARCHAR}
					AND SCHDL_KND_CD = '1'
				
				UNION
				
				SELECT SCHDL_ID
				FROM CT_SCHDL_B
				WHERE DEPT_ID = #{deptId, jdbcType=VARCHAR}
					AND SCHDL_KND_CD = '3'
				
				UNION
				
				SELECT SCHDL_ID
				FROM CT_SCHDL_B
				WHERE COMP_ID = #{compId, jdbcType=VARCHAR}
					AND SCHDL_KND_CD = '4'
				
				UNION
				
				SELECT SCHDL_ID
				FROM CT_SCHDL_B
				WHERE SCHDL_KND_CD = '2'
				AND GRP_ID IN (SELECT DISTINCT SCHDL_GRP_ID FROM WC_SCHDL_GRP_MBSH_D WHERE USER_UID= #{userUid, jdbcType=VARCHAR})	
				
				UNION
				
				SELECT SCHDL_ID
				FROM CT_SCHDL_B
				WHERE SCHDL_TYP_CD='5'
			) B ON WS_T.SCHDL_ID = B.SCHDL_ID
		</if>
		<include refid="selectCtSchdlBWhere"/>
	</select>
	
	<!-- 일정 등록 저장 -->
	<insert id="insertCtSchdlB" parameterType="CtSchdlBVo" >
		/* com.innobiz.orange.web.ct.dao.CtSchdlBDao.insertCtSchdlB */
		INSERT INTO CT_SCHDL_B
		<trim prefix="(" suffix=")" suffixOverrides=",">
			SCHDL_ID,
			USER_UID,
			COMP_ID,
			DEPT_ID,
			GRP_ID,
			SCHDL_TYP_CD,
			SCHDL_KND_CD,
			OPEN_GRAD_CD,
			SCHDL_STAT_CD,
			EDITOR_TYP_CD,
			SELF_REG_YN,
			SCHDL_START_DT,
			SCHDL_END_DT,
			REPET_YN,
			HOLI_YN,
			SOLA_LUNA_YN,
			SUBJ,
			LOC_NM,
			LOC_LATD_LOTD_VA,
			CONT,
			WORK_PRIO_ORDR,
			WORK_CMLT_YMD,
			ATT_YN,
			REGR_UID,
			REGR_NM,
			REG_DT,
			SCHDL_FILE_ID,
			SCHDL_PID,
			ALLDAY_YN,
			CT_ID,
			CT_FNC_ID,
			CT_FNC_LOC_STEP,
			CT_FNC_UID,
			CT_FNC_PID
		</trim>
		<trim prefix="VALUES (" suffix=")" suffixOverrides="," >
			#{schdlId, jdbcType=VARCHAR},
			#{userUid, jdbcType=VARCHAR},
			#{compId, jdbcType=CHAR},
			#{deptId, jdbcType=VARCHAR},
			#{grpId, jdbcType=VARCHAR},
			#{schdlTypCd, jdbcType=VARCHAR},
			#{schdlKndCd, jdbcType=VARCHAR},
			#{openGradCd, jdbcType=VARCHAR},
			#{schdlStatCd, jdbcType=VARCHAR},
			#{editorTypCd, jdbcType=VARCHAR},
			#{selfRegYn, jdbcType=CHAR},
			TO_DATE(#{schdlStartDt, jdbcType=VARCHAR}, 'YYYY-MM-DD HH24:MI:SS'),
			TO_DATE(#{schdlEndDt, jdbcType=VARCHAR}, 'YYYY-MM-DD HH24:MI:SS'),
			#{repetYn, jdbcType=CHAR},
			#{holiYn, jdbcType=CHAR},
			#{solaLunaYn, jdbcType=CHAR},
			#{subj, jdbcType=NVARCHAR},
			#{locNm, jdbcType=NVARCHAR},
			#{locLatdLotdVa, jdbcType=VARCHAR},
			#{cont, jdbcType=NCLOB},
			#{workPrioOrdr, jdbcType=VARCHAR},
			TO_DATE(#{workCmltYmd, jdbcType=VARCHAR}, 'YYYY-MM-DD HH24:MI:SS'),
			#{attYn, jdbcType=CHAR},
			#{regrUid, jdbcType=VARCHAR},
			#{regrNm, jdbcType=NVARCHAR},
			SYSDATE,
			#{schdlFileId, jdbcType=VARCHAR},
			#{schdlPid, jdbcType=VARCHAR},
			#{alldayYn, jdbcType=VARCHAR},
			
			#{ctId, jdbcType=VARCHAR},
			#{ctFncId, jdbcType=VARCHAR},
			#{ctFncLocStep, jdbcType=VARCHAR},
			#{ctFncUid, jdbcType=VARCHAR},
			#{ctFncPid, jdbcType=VARCHAR},
		</trim>
	</insert>
	
	<!-- 일정 수정 -->
	<update id="updateCtSchdlB" parameterType="CtSchdlBVo" >
		/* com.innobiz.orange.web.ct.dao.CtSchdlBDao.updateCtSchdlB */
		UPDATE CT_SCHDL_B
		<set>
			<if test="userUid != null"> USER_UID = #{userUid, jdbcType=VARCHAR},</if>
			<if test="compId != null"> COMP_ID = #{compId, jdbcType=CHAR},</if>
			<if test="deptId != null"> DEPT_ID = #{deptId, jdbcType=VARCHAR},</if>
			<if test="grpId != null"> GRP_ID = #{grpId, jdbcType=VARCHAR},</if>
			<if test="schdlTypCd != null"> SCHDL_TYP_CD = #{schdlTypCd, jdbcType=VARCHAR},</if>
			<if test="schdlKndCd != null"> SCHDL_KND_CD = #{schdlKndCd, jdbcType=VARCHAR},</if>
			<if test="openGradCd != null"> OPEN_GRAD_CD = #{openGradCd, jdbcType=VARCHAR},</if>
			<if test="schdlStatCd != null"> SCHDL_STAT_CD = #{schdlStatCd, jdbcType=VARCHAR},</if>
			<if test="editorTypCd != null"> EDITOR_TYP_CD = #{editorTypCd, jdbcType=VARCHAR},</if>
			<if test="selfRegYn != null"> SELF_REG_YN = #{selfRegYn, jdbcType=CHAR},</if>
			<if test="schdlStartDt != null"> SCHDL_START_DT = TO_DATE(#{schdlStartDt, jdbcType=VARCHAR}, 'YYYY-MM-DD HH24:MI:SS'),</if>
			<if test="schdlEndDt != null"> SCHDL_END_DT = TO_DATE(#{schdlEndDt, jdbcType=VARCHAR}, 'YYYY-MM-DD HH24:MI:SS'),</if>
			<if test="repetYn != null"> REPET_YN = #{repetYn, jdbcType=CHAR},</if>
			<if test="holiYn != null"> HOLI_YN = #{holiYn, jdbcType=CHAR},</if>
			<if test="solaLunaYn != null"> SOLA_LUNA_YN = #{solaLunaYn, jdbcType=CHAR},</if>
			<if test="subj != null"> SUBJ = #{subj, jdbcType=NVARCHAR},</if>
			<if test="locNm != null"> LOC_NM = #{locNm, jdbcType=NVARCHAR},</if>
			<if test="locLatdLotdVa != null"> LOC_LATD_LOTD_VA = #{locLatdLotdVa, jdbcType=VARCHAR},</if>
			<if test="cont != null"> CONT = #{cont, jdbcType=NCLOB},</if>
			<if test="workPrioOrdr != null"> WORK_PRIO_ORDR = #{workPrioOrdr, jdbcType=VARCHAR},</if>
			<if test="workCmltYmd != null"> WORK_CMLT_YMD = TO_DATE(#{workCmltYmd, jdbcType=VARCHAR}, 'YYYY-MM-DD HH24:MI:SS'),</if>
			<if test="attYn != null"> ATT_YN = #{attYn, jdbcType=CHAR},</if>
			<if test="modDt != null">MOD_DT = SYSDATE,</if>
			<if test="modrUid != null"> MODR_UID = #{modrUid, jdbcType=VARCHAR},</if>
			<if test="schdlFileId != null"> SCHDL_FILE_ID = #{schdlFileId, jdbcType=VARCHAR},</if>
			<if test="schdlPid != null"> SCHDL_PID = #{schdlPid, jdbcType=VARCHAR},</if>
			<if test="alldayYn != null"> ALLDAY_YN = #{alldayYn, jdbcType=VARCHAR},</if>
			
			<if test="ctId != null">CT_ID = #{ctId, jdbcType=VARCHAR},</if>
			<if test="ctFncId != null"> CT_FNC_ID = #{ctFncId, jdbcType=VARCHAR},</if>
			<if test="ctFncLocStep != null"> CT_FNC_LOC_STEP = #{ctFncLocStep, jdbcType=VARCHAR},</if>
			<if test="ctFncUid != null"> CT_FNC_UID = #{ctFncUid, jdbcType=VARCHAR},</if>
			<if test="ctFncPid != null"> CT_FNC_PID = #{ctFncPid, jdbcType=VARCHAR},</if>
		</set>
		<where>
			<if test="schdlId != null and schdlId !=''"> AND SCHDL_ID = #{schdlId, jdbcType=CHAR}</if>
		</where>
	</update>

	<!-- 일정 삭제 -->
	<delete id="deleteCtSchdlB" parameterType="CtSchdlBVo" >
		/* com.innobiz.orange.web.ct.dao.CtSchdlBDao.deleteCtSchdlB */
		DELETE FROM CT_SCHDL_B
		<where>
			<if test="schdlId != null and schdlId !=''"> AND SCHDL_ID = #{schdlId, jdbcType=CHAR}</if>
			<if test="schdlPid != null and schdlPid !=''"> AND SCHDL_PID = #{schdlPid, jdbcType=CHAR}</if>
		</where>
	</delete>

</mapper>