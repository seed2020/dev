<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >

<!-- TABLE : WC_SCHDL_B[일정 기본] -->
<mapper namespace="com.innobiz.orange.web.wc.dao.SchdlBDao">

	<resultMap id="wcSchdlBMap" type="WcSchdlBVo">
		<id property="schdlId" column="SCHDL_ID" /><!-- 일정ID -->
		<result property="userUid" column="USER_UID" /><!-- 사용자UID -->
		<result property="compId" column="COMP_ID" /><!-- 회사ID -->
		<result property="deptId" column="DEPT_ID" /><!-- 부서ID -->
		<result property="grpId" column="GRP_ID" /><!-- 그룹ID -->
		<result property="schdlTypCd" column="SCHDL_TYP_CD" /><!-- 일정구분코드 -->
		<result property="schdlKndCd" column="SCHDL_KND_CD" /><!-- 일정종류코드 -->
		<result property="openGradCd" column="OPEN_GRAD_CD" /><!-- 공개등급코드 -->
		<result property="schdlStatCd" column="SCHDL_STAT_CD" /><!-- 일정상태코드 -->
		<result property="editorTypCd" column="EDITOR_TYP_CD" /><!-- 에디터구분코드 -->
		<result property="selfRegYn" column="SELF_REG_YN" /><!-- 본인입력여부 -->
		<result property="schdlStartDt" column="SCHDL_START_DT" /><!-- 일정시작일시 -->
		<result property="schdlEndDt" column="SCHDL_END_DT" /><!-- 일정종료일시 -->
		<result property="repetYn" column="REPET_YN" /><!-- 반복여부 -->
		<result property="holiYn" column="HOLI_YN" /><!-- 휴일여부 -->
		<result property="solaLunaYn" column="SOLA_LUNA_YN" /><!-- 양음력여부 -->
		<result property="subj" column="SUBJ" /><!-- 제목 -->
		<result property="locNm" column="LOC_NM" /><!-- 장소명 -->
		<result property="locLatdLotdVa" column="LOC_LATD_LOTD_VA" /><!-- 장소위도경도값 -->
		<result property="cont" column="CONT" /><!-- 내용 -->
		<result property="workPrioOrdr" column="WORK_PRIO_ORDR" /><!-- 할일우선순서 -->
		<result property="workCmltYmd" column="WORK_CMLT_YMD" /><!-- 할일완료년월일 -->
		<result property="attYn" column="ATT_YN" /><!-- 첨부여부 -->
		<result property="regrUid" column="REGR_UID" /><!-- 등록자UID -->
		<result property="regrNm" column="REGR_NM" /><!-- 등록자명 -->
		<result property="regDt" column="REG_DT" /><!-- 등록일시 -->
		<result property="modDt" column="MOD_DT" /><!-- 수정일시 -->
		<result property="modrUid" column="MODR_UID" /><!-- 수정자UID -->
		<result property="schdlFileId" column="SCHDL_FILE_ID" /><!-- 일정파일ID -->
		<result property="schdlPid" column="SCHDL_PID" /><!-- 일정 부모ID -->
		<result property="schdlYm" column="SCHDL_YM" /><!-- 해당 월별 년월 -->
		<result property="schdlPrevYm" column="SCHDL_PREVYM" /><!-- 이전 월별 년월 -->
		<result property="schdlNextYm" column="SCHDL_NEXTYM" /><!-- 이후 월별 년월 -->
		
		<result property="searchPromChk" column="SEARCH_PROM_CHK" /><!-- 검색약속체크 -->
		<result property="searchWorkChk" column="SEARCH_WORK_CHK" /><!-- 검색할일체크  -->
		<result property="searchEvntChk" column="SEARCH_EVNT_CHK" /><!-- 검색행사체크 -->
		<result property="searchAnnvChk" column="SEARCH_ANNV_CHK" /><!-- 검색기념일체크 -->
		<result property="searchPsnChk" column="SEARCH_PSN_CHK" /><!-- 검색개인체크 -->
		<result property="searchDeptChk" column="SEARCH_DEPT_CHK" /><!-- 검색부서체크 -->
		<result property="searchCompChk" column="SEARCH_COMP_CHK" /><!-- 검색회사체크 -->
		<result property="searchGrpChk" column="SEARCH_GRP_CHK" /><!-- 검색그룹체크 -->
		
		<result property="startHour" column="STARTHOUR" /><!-- 해당날짜의 시작시간 -->
		<result property="endHour" column="ENDHOUR" /><!-- 해당날짜의 종료 시간 -->
		
		<result property="repetStartDt" column="REPET_START_DT"/><!-- 반복시작일시 -->
		<result property="repetEndDt" column="REPET_END_DT"/><!-- 반복시작일시 -->
		
		<result property="schdlTypNm" column="SCHDL_TYP_NM"/><!-- 일정구분명 -->
		<result property="alldayYn" column="ALLDAY_YN"/><!-- 종일여부 -->
		<result property="grpNm" column="GRP_NM"/><!-- 그룹명 -->
		<result property="afterDay" column="AFTER_DAY"/><!-- 기간별 일수차 -->
		
	</resultMap>
	
	
	<!-- 조회조건 -->
	<sql id="selectSchdlBWhere">
		<where>
			<if test="schdlId != null and schdlId !=''">AND T.SCHDL_ID = #{schdlId, jdbcType=VARCHAR}</if>
			<if test="schdlPid != null and schdlPid !=''">AND T.SCHDL_PID = #{schdlPid, jdbcType=CHAR}</if>
			<if test="schWord != null and schWord !=''">AND T.SUBJ LIKE CONCAT('%', #{schWord, jdbcType=VARCHAR}, '%')</if>			
			<if test="schdlStartDt != null and schdlStartDt != ''"><![CDATA[AND DATE_FORMAT(T.SCHDL_END_DT, '%Y-%m-%d') >= #{schdlStartDt, jdbcType=VARCHAR}]]></if>
			<if test="schdlEndDt != null and schdlEndDt != ''"><![CDATA[AND DATE_FORMAT(T.SCHDL_START_DT, '%Y-%m-%d') <= #{schdlEndDt, jdbcType=VARCHAR}]]></if>
			<if test="schdlTypCd != null and schdlTypCd != ''">
				AND T.SCHDL_TYP_CD = #{schdlTypCd, jdbcType=VARCHAR}
				<if test="compId != null and compId !=''"> AND T.COMP_ID = #{compId, jdbcType=VARCHAR}</if>
			</if>
 			<if test="schdlTypCd == null or schdlTypCd == ''">
 				AND T.SCHDL_TYP_CD != '5'
 				<if test="schdlKndCd == null or schdlKndCd == ''">
					AND (
						(T.USER_UID = #{userUid, jdbcType=VARCHAR} AND SCHDL_KND_CD = '1')
						<if test="choiGrpIds != null"> OR ( SCHDL_KND_CD = '2'
							<foreach collection="choiGrpIds" item="item" separator="," open="AND GRP_ID IN(" close=")">
								#{item, jdbcType=VARCHAR}
							</foreach>
							)
						</if> OR
						((DEPT_ID=#{deptId, jdbcType=VARCHAR} OR T.SCHDL_ID = (SELECT D.SCHDL_ID FROM WC_SCHDL_DEPT_R D WHERE D.ORG_ID = #{deptId, jdbcType=VARCHAR} AND D.SCHDL_ID = T.SCHDL_ID)) AND SCHDL_KND_CD = '3') OR
						(T.SCHDL_KND_CD = '4' <if test="compId != null and compId !=''"> AND T.COMP_ID = #{compId, jdbcType=VARCHAR}</if>)
					)
				</if>
				<if test="schdlKndCd != null and schdlKndCd != ''">
					AND T.SCHDL_KND_CD = #{schdlKndCd, jdbcType=VARCHAR}
					<if test="schdlKndCd == 1"> AND T.USER_UID = #{userUid, jdbcType=VARCHAR}</if>
					<if test="schdlKndCd == 2">
						<if test="grpId != null and grpId != ''"> AND T.GRP_ID = #{grpId, jdbcType=VARCHAR}</if>
						<if test="choiGrpIds != null"><!-- 그룹ID 미선택 -->
							<foreach collection="choiGrpIds" item="item" separator="," open="AND T.GRP_ID IN(" close=")">
								#{item, jdbcType=VARCHAR}
							</foreach>
						</if>					
					</if>
					<if test="schdlKndCd == 3"> AND (DEPT_ID=#{deptId, jdbcType=VARCHAR} OR T.SCHDL_ID = (SELECT D.SCHDL_ID FROM WC_SCHDL_DEPT_R D WHERE D.ORG_ID = #{deptId, jdbcType=VARCHAR} AND D.SCHDL_ID = T.SCHDL_ID))</if>
					<if test="schdlKndCd == 4"><if test="compId != null and compId !=''"> AND T.COMP_ID = #{compId, jdbcType=VARCHAR}</if></if>								
				</if>
 			</if>			
			<if test="repetYn != null and repetYn !=''"> AND T.REPET_YN = #{repetYn, jdbcType=VARCHAR}</if>
			<if test="holiYn != null and holiYn !=''">AND T.HOLI_YN = #{holiYn, jdbcType=CHAR}</if>
			<if test="whereSqllet != null and whereSqllet != ''"> ${whereSqllet}</if>	
		</where>
	</sql>
	
	<!-- 조인절 -->
	<sql id="selectSchdlBJoin">
		<if test="natCd != null and natCd !=''"> INNER JOIN WC_ANNV_D ANNV ON T.COMP_ID = ANNV.COMP_ID AND T.SCHDL_PID = ANNV.SCHDL_ID AND ANNV.NAT_CD = #{natCd, jdbcType=VARCHAR}</if><!-- 국가코드 조인절 -->
	</sql>
	
	<!-- 목록조회 -->
	<select id="selectSchdlB" resultMap="wcSchdlBMap" parameterType="WcSchdlBVo" >
		/* com.innobiz.orange.web.wc.dao.SchdlBDao.selectSchdlB */
		SELECT
		<trim prefix="" suffix="" suffixOverrides=",">
			  T.COMP_ID,
		      T.USER_UID,
		      T.SCHDL_TYP_CD,
		      <if test="natCd == null or natCd ==''">T.SUBJ,</if>
		      <if test="natCd != null and natCd !=''">(SELECT RESC_VA FROM WC_RESC_B WHERE RESC_ID = ANNV.RESC_ID AND LANG_TYP_CD = IFNULL(#{queryLang, jdbcType=VARCHAR},'ko')) SUBJ,</if>
		      T.LOC_NM,
		      T.OPEN_GRAD_CD,
		      T.SCHDL_STAT_CD,
		      T.WORK_PRIO_ORDR,
		      T.WORK_CMLT_YMD,
		      <if test="withLob">T.CONT,</if>
		      T.ATT_YN,
		      T.SELF_REG_YN,
		      T.REGR_UID,
		      T.REG_DT,
		      T.EDITOR_TYP_CD,
		      T.SCHDL_ID,
		      T.MOD_DT,
		      T.MODR_UID,
		      T.SCHDL_FILE_ID,
		      T.SCHDL_START_DT,
		      T.SCHDL_END_DT,
		      T.REPET_YN,
		      T.SCHDL_PID,
		      T.SCHDL_KND_CD,
		      T.GRP_ID,
		      T.DEPT_ID,
		      T.HOLI_YN,
		      T.SOLA_LUNA_YN,
		      T.LOC_LATD_LOTD_VA,
		      T.ALLDAY_YN,
		      (SELECT RESC_VA FROM OR_RESC_B WHERE RESC_ID = (SELECT RESC_ID FROM OR_USER_B WHERE USER_UID = T.REGR_UID) AND LANG_TYP_CD = IFNULL(#{queryLang, jdbcType=VARCHAR},'ko')) AS REGR_NM,
		      (SELECT RESC_VA FROM WC_RESC_B WHERE RESC_ID = (SELECT RESC_ID FROM WC_CAT_CLS_B WHERE CAT_ID = T.SCHDL_TYP_CD) AND LANG_TYP_CD = IFNULL(#{queryLang, jdbcType=VARCHAR},'ko') ) AS SCHDL_TYP_NM ,
			  (SELECT GRP_NM FROM WC_SCHDL_GRP_B WSG_T WHERE T.GRP_ID = WSG_T.SCHDL_GRP_ID) AS GRP_NM,
		</trim>
		FROM WC_SCHDL_B T <include refid="selectSchdlBJoin"/>
		<include refid="selectSchdlBWhere"/>
		<if test="orderBy != null">ORDER BY ${orderBy}</if>
		<if test="orderBy == null">ORDER BY T.SCHDL_ID</if>
		<if test="pageNo != null and pageRowCnt != null">
		LIMIT #{pageStrt, jdbcType=NUMERIC}, #{pageRowCnt, jdbcType=NUMERIC}
		</if>
	</select>
	
	<!-- 수정 -->
	<update id="updateSchdlB" parameterType="WcSchdlBVo" >
		/* com.innobiz.orange.web.wc.dao.SchdlBDao.updateSchdlB */
		UPDATE WC_SCHDL_B
		<set>
			<if test="schdlStartDt != null"> SCHDL_START_DT = STR_TO_DATE(#{schdlStartDt, jdbcType=VARCHAR}, '%Y-%m-%d %H:%i:%s'),</if>
			<if test="schdlEndDt != null"> SCHDL_END_DT = STR_TO_DATE(#{schdlEndDt, jdbcType=VARCHAR}, '%Y-%m-%d %H:%i:%s'),</if>
			<if test="schdlPid != null"> SCHDL_PID = #{schdlPid, jdbcType=VARCHAR},</if>
			<if test="repetYn != null"> REPET_YN = #{repetYn, jdbcType=VARCHAR},</if>
			<if test="alldayYn != null"> ALLDAY_YN = #{alldayYn, jdbcType=VARCHAR},</if>
		</set>
		WHERE SCHDL_ID = #{schdlId, jdbcType=VARCHAR}
		AND COMP_ID = #{compId, jdbcType=VARCHAR}

	</update>

</mapper>