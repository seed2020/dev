
-- 주의 : 사이트 사용자 계정(GW_[고객코드]_USER) 로 실행 할 것.



-- 공통 시퀀스 테이블
-- DROP TABLE CM_SEQ_B;
CREATE TABLE CM_SEQ_B (
	SEQ_ID			VARCHAR(30) NOT NULL COMMENT '일련번호ID',
	SEQ_NO			BIGINT NOT NULL COMMENT '일련번호번호',
	PRIMARY KEY (SEQ_ID)
)
COMMENT='일련번호기본';

-- DROP PROCEDURE SP_SEQ;
DELIMITER $$
CREATE PROCEDURE SP_SEQ(
	IN    p_SEQ_ID VARCHAR(30),
	OUT   p_OUTPUT BIGINT
)
BEGIN
	
	DECLARE v_finished INTEGER DEFAULT 0;
	
	DECLARE CUR_SP_SEQ CURSOR FOR
		SELECT SEQ_NO FROM CM_SEQ_B WHERE SEQ_ID = p_SEQ_ID;
	
	DECLARE CONTINUE HANDLER FOR NOT FOUND SET v_finished = 1;
	
	DECLARE EXIT HANDLER FOR SQLEXCEPTION, SQLWARNING
	BEGIN
		SET p_OUTPUT = 0;
		ROLLBACK;
	END;
	
	SET p_OUTPUT = 0;
	
	START TRANSACTION;
	
	UPDATE CM_SEQ_B SET SEQ_NO = SEQ_NO + 1 WHERE SEQ_ID = p_SEQ_ID;
	
	OPEN CUR_SP_SEQ;
	
	REPEAT
	
	FETCH NEXT FROM CUR_SP_SEQ INTO p_OUTPUT;
	
	UNTIL v_finished END REPEAT;
	
	CLOSE CUR_SP_SEQ;
	COMMIT;
END$$
DELIMITER ;
/* - 테스트 -
call SP_SEQ('AA',@no);
select @no;
*/

-- DROP TABLE AP_DOC_NO_D;
CREATE TABLE AP_DOC_NO_D(
	YY				INT NOT NULL COMMENT '년',
	REC_LST_ID		VARCHAR(30) NOT NULL COMMENT '대장ID',
	ORG_ID			VARCHAR(30) NOT NULL COMMENT '조직ID',
	ORG_RESC_ID		VARCHAR(30) NOT NULL COMMENT '조직리소스ID',
	DOC_SEQ			BIGINT NOT NULL COMMENT '문서일련번호',
	PRIMARY KEY (YY, REC_LST_ID, ORG_ID)
)
COMMENT='문서번호상세';

-- DROP PROCEDURE SP_AP_DOC_SEQ;
DELIMITER $$
CREATE PROCEDURE SP_AP_DOC_SEQ(
	IN    p_YY INT,
	IN    p_REC_LST_ID VARCHAR(30),
	IN    p_ORG_ID VARCHAR(30),
	IN    p_ORG_RESC_ID VARCHAR(30),
	OUT   p_DOC_SEQ BIGINT
)
BEGIN
	
	DECLARE v_finished INTEGER DEFAULT 0;
	
	DECLARE CUR_SP_AP_DOC_SEQ CURSOR FOR
		SELECT DOC_SEQ FROM AP_DOC_NO_D WHERE YY = p_YY AND REC_LST_ID = p_REC_LST_ID AND ORG_ID = p_ORG_ID;
	
	DECLARE CONTINUE HANDLER FOR NOT FOUND SET v_finished = 1;
	
	DECLARE EXIT HANDLER FOR SQLEXCEPTION, SQLWARNING
	BEGIN
		SET p_DOC_SEQ = 0;
		ROLLBACK;
	END;
	
	SET p_DOC_SEQ = 0;
	
	START TRANSACTION;
	
	UPDATE AP_DOC_NO_D SET DOC_SEQ = DOC_SEQ + 1 WHERE YY = p_YY AND REC_LST_ID = p_REC_LST_ID AND ORG_ID = p_ORG_ID;
	
	OPEN CUR_SP_AP_DOC_SEQ;
	
	REPEAT
	
	FETCH NEXT FROM CUR_SP_AP_DOC_SEQ INTO p_DOC_SEQ;
	
	UNTIL v_finished END REPEAT;
	
	CLOSE CUR_SP_AP_DOC_SEQ;
	
	IF p_DOC_SEQ = 0 THEN
		INSERT INTO AP_DOC_NO_D VALUES ( p_YY, p_REC_LST_ID, p_ORG_ID, p_ORG_RESC_ID, 0 );
	END IF;
	
	COMMIT;
END$$
DELIMITER ;
/* - 테스트 -
call SP_AP_DOC_SEQ(2017, 'reg', 'O001', 'R001', @no);
select @no;
*/

CREATE TABLE DM_DOC_NO_D(
	STOR_ID			VARCHAR(30) NOT NULL COMMENT '저장소ID',
	YY				INT NOT NULL COMMENT '년',
	ORG_ID			VARCHAR(30) NOT NULL COMMENT '조직ID',
	DOC_SEQ			BIGINT COMMENT '문서일련번호',
	PRIMARY KEY (STOR_ID, YY, ORG_ID)
)
COMMENT='문서번호상세';

-- DROP PROCEDURE SP_DM_DOC_SEQ;
DELIMITER $$
CREATE PROCEDURE SP_DM_DOC_SEQ(
	IN    p_STOR_ID VARCHAR(30),
	IN    p_YY INT,
	IN    p_ORG_ID VARCHAR(30),
	OUT   p_DOC_SEQ BIGINT
)
BEGIN
	
	DECLARE v_finished INTEGER DEFAULT 0;
	
	DECLARE CUR_SP_DM_DOC_SEQ CURSOR FOR
		SELECT DOC_SEQ FROM DM_DOC_NO_D WHERE STOR_ID = p_STOR_ID AND YY = p_YY AND ORG_ID = p_ORG_ID;
	
	DECLARE CONTINUE HANDLER FOR NOT FOUND SET v_finished = 1;
	
	DECLARE EXIT HANDLER FOR SQLEXCEPTION, SQLWARNING
	BEGIN
		SET p_DOC_SEQ = 0;
		ROLLBACK;
	END;
	
	SET p_DOC_SEQ = 0;
	
	START TRANSACTION;
	
	UPDATE DM_DOC_NO_D SET DOC_SEQ = DOC_SEQ + 1 WHERE STOR_ID = p_STOR_ID AND YY = p_YY AND ORG_ID = p_ORG_ID;
	
	OPEN CUR_SP_DM_DOC_SEQ;
	
	REPEAT
	
	FETCH NEXT FROM CUR_SP_DM_DOC_SEQ INTO p_DOC_SEQ;
	
	UNTIL v_finished END REPEAT;
	
	CLOSE CUR_SP_DM_DOC_SEQ;
	
	IF p_DOC_SEQ = 0 THEN
		INSERT INTO DM_DOC_NO_D VALUES ( p_STOR_ID, p_YY, p_ORG_ID, 0 );
	END IF;
	
	COMMIT;
END$$
DELIMITER ;
/* - 테스트 -
call SP_DM_DOC_SEQ('S001', 2017, 'O001', @no);
select @no;
*/


-- DROP PROCEDURE SP_WH_DOC_SEQ;
DELIMITER $$
CREATE PROCEDURE SP_WH_DOC_SEQ(
	IN    p_YY INT,
	IN    p_ORG_ID VARCHAR(30),
	OUT   p_DOC_SEQ BIGINT
)
BEGIN
	
	DECLARE v_finished INTEGER DEFAULT 0;
	
	DECLARE CUR_SP_WH_DOC_SEQ CURSOR FOR
		SELECT DOC_SEQ FROM WH_DOC_NO_D WHERE YY = p_YY AND ORG_ID = p_ORG_ID;
	
	DECLARE CONTINUE HANDLER FOR NOT FOUND SET v_finished = 1;
	
	DECLARE EXIT HANDLER FOR SQLEXCEPTION, SQLWARNING
	BEGIN
		SET p_DOC_SEQ = 0;
		ROLLBACK;
	END;
	
	SET p_DOC_SEQ = 0;
	
	START TRANSACTION;
	
	UPDATE WH_DOC_NO_D SET DOC_SEQ = DOC_SEQ + 1 WHERE YY = p_YY AND ORG_ID = p_ORG_ID;
	
	OPEN CUR_SP_WH_DOC_SEQ;
	
	REPEAT
	
	FETCH NEXT FROM CUR_SP_WH_DOC_SEQ INTO p_DOC_SEQ;
	
	UNTIL v_finished END REPEAT;
	
	CLOSE CUR_SP_WH_DOC_SEQ;
	
	IF p_DOC_SEQ = 0 THEN
		INSERT INTO WH_DOC_NO_D VALUES ( p_YY, p_ORG_ID, 0 );
	END IF;
	
	COMMIT;
END$$
DELIMITER ;
/* - 테스트 -
call SP_WH_DOC_SEQ(2017, 'O001', @no);
select @no;
*/

