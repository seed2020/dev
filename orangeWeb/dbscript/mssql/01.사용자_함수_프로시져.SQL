--
--  고객코드 : AD8227
--  [[ 주의 ]]
--      AD8227 를 설치할 고객 코드로 변경해서 실행할것
--      sa 계정으로 실행(계정생성, 권한부여)



USE [GW_AD8227]
GO

EXEC sp_addlogin 'GW_AD8227_USER', 'asdqwe123$%^', 'GW_AD8227';
GO

CREATE USER [GW_AD8227_USER] FOR LOGIN [GW_AD8227_USER]
GO

EXEC sp_addrolemember N'db_owner', N'GW_AD8227_USER'
GO


/****** Object:  UserDefinedFunction [dbo].[FN_RPAD]    Script Date: 09/22/2014 18:24:10 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- [공통] 오라클 RPAD 함수
CREATE FUNCTION [dbo].[FN_RPAD]
(@INPUT VARCHAR(100), @CN INT, @CHR VARCHAR(10))
RETURNS VARCHAR(100)
AS
BEGIN
	RETURN (@INPUT+REPLICATE(@CHR, @CN - DATALENGTH(@INPUT)));
END
GO


/****** Object:  UserDefinedFunction [dbo].[FN_LPAD]    Script Date: 09/22/2014 18:24:10 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- 오라클 LPAD 함수
CREATE FUNCTION [dbo].[FN_LPAD]
(@INPUT VARCHAR(100), @CN INT, @CHR VARCHAR(10))
RETURNS VARCHAR(100)
AS
BEGIN
	RETURN (REPLICATE(@CHR, @CN - DATALENGTH(@INPUT))+@INPUT);
END
GO


/****** Object:  StoredProcedure [dbo].[SP_SEQ]    Script Date: 09/22/2014 18:24:09 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*
--  오라클의 시퀀스 대치 목적의 테이블

DECLARE @NEXTVAL BIGINT;
EXEC SP_SEQ 'BA_RESC_B', @NEXTVAL OUTPUT;
PRINT @NEXTVAL;
*/
CREATE PROCEDURE [dbo].[SP_SEQ] (
	@SEQ_ID VARCHAR(30),
	@SEQ_NO BIGINT OUTPUT
)
AS
BEGIN
	BEGIN TRAN SP_SEQ_TRANS;
	
	UPDATE CM_SEQ_B SET SEQ_NO = SEQ_NO + 1 WHERE SEQ_ID = @SEQ_ID;
	
	DECLARE CUR_SP_SEQ CURSOR FOR
		SELECT SEQ_NO FROM CM_SEQ_B WHERE SEQ_ID = @SEQ_ID;

	OPEN CUR_SP_SEQ;
	
	FETCH NEXT FROM CUR_SP_SEQ INTO @SEQ_NO;
	
	IF @@FETCH_STATUS <> 0
	BEGIN
		SET @SEQ_NO = 0;
	END
	
	CLOSE CUR_SP_SEQ;
	DEALLOCATE CUR_SP_SEQ;
	
	COMMIT TRAN SP_SEQ_TRANS;
END
GO

/****** Object:  StoredProcedure [dbo].[SP_AP_DOC_SEQ]    Script Date: 09/22/2014 18:24:09 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
--
--  문서 번호 생성 시퀀스
--
CREATE PROCEDURE [dbo].[SP_AP_DOC_SEQ] (
	@YY INT,
	@REC_LST_ID VARCHAR(30),
	@ORG_ID VARCHAR(30),
	@ORG_RESC_ID VARCHAR(30),
	@DOC_SEQ BIGINT OUTPUT
)
AS
BEGIN
	BEGIN TRAN SP_AP_DOC_SEQ_TRANS;
	
	UPDATE AP_DOC_NO_D SET DOC_SEQ = DOC_SEQ + 1 WHERE YY = @YY AND REC_LST_ID = @REC_LST_ID AND ORG_ID = @ORG_ID;
	
	DECLARE CUR_SP_AP_DOC_SEQ CURSOR FOR
		SELECT DOC_SEQ FROM AP_DOC_NO_D WHERE YY = @YY AND REC_LST_ID = @REC_LST_ID AND ORG_ID = @ORG_ID;

	OPEN CUR_SP_AP_DOC_SEQ;
	
	FETCH NEXT FROM CUR_SP_AP_DOC_SEQ INTO @DOC_SEQ;
	
	IF @@FETCH_STATUS <> 0
	BEGIN
		INSERT INTO AP_DOC_NO_D VALUES ( @YY, @REC_LST_ID, @ORG_ID, @ORG_RESC_ID, 0 );
		SET @DOC_SEQ = 0;
	END
	
	CLOSE CUR_SP_AP_DOC_SEQ;
	DEALLOCATE CUR_SP_AP_DOC_SEQ;
	
	COMMIT TRAN SP_AP_DOC_SEQ_TRANS;
END
GO



/****** Object:  StoredProcedure [dbo].[SP_DM_DOC_SEQ]    Script Date: 2015-10-23 오전 11:45:43 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
--
--  문서관리 => 문서 번호
--
CREATE PROCEDURE [dbo].[SP_DM_DOC_SEQ] (
	@STOR_ID VARCHAR(30),	
	@YY INT,
	@ORG_ID VARCHAR(30),	
	@DOC_SEQ BIGINT OUTPUT
)
AS
BEGIN
	BEGIN TRAN SP_DM_DOC_SEQ_TRANS;
	
	UPDATE DM_DOC_NO_D SET DOC_SEQ = DOC_SEQ + 1 WHERE STOR_ID = @STOR_ID AND YY = @YY AND ORG_ID = @ORG_ID;
	
	DECLARE CUR_SP_DM_DOC_SEQ CURSOR FOR
		SELECT DOC_SEQ FROM DM_DOC_NO_D WHERE STOR_ID = @STOR_ID AND YY = @YY AND ORG_ID = @ORG_ID;

	OPEN CUR_SP_DM_DOC_SEQ;
	
	FETCH NEXT FROM CUR_SP_DM_DOC_SEQ INTO @DOC_SEQ;
	
	IF @@FETCH_STATUS <> 0
	BEGIN
		INSERT INTO DM_DOC_NO_D VALUES ( @STOR_ID, @YY, @ORG_ID, 0 );
		SET @DOC_SEQ = 0;
	END
	
	CLOSE CUR_SP_DM_DOC_SEQ;
	DEALLOCATE CUR_SP_DM_DOC_SEQ;
	
	COMMIT TRAN SP_DM_DOC_SEQ_TRANS;
END
GO



/****** Object:  StoredProcedure [dbo].[SP_WH_DOC_SEQ]    Script Date: 2017-07-06 오후 3:04:39 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

--
--  헬프데스크 => 문서 번호
--
CREATE PROCEDURE [dbo].[SP_WH_DOC_SEQ] (
	@YY INT,
	@ORG_ID VARCHAR(30),	
	@DOC_SEQ BIGINT OUTPUT
)
AS
BEGIN
	BEGIN TRAN SP_WH_DOC_SEQ_TRANS;
	
	UPDATE WH_DOC_NO_D SET DOC_SEQ = DOC_SEQ + 1 WHERE YY = @YY AND ORG_ID = @ORG_ID;
	
	DECLARE CUR_SP_WH_DOC_SEQ CURSOR FOR
		SELECT DOC_SEQ FROM WH_DOC_NO_D WHERE YY = @YY AND ORG_ID = @ORG_ID;

	OPEN CUR_SP_WH_DOC_SEQ;
	
	FETCH NEXT FROM CUR_SP_WH_DOC_SEQ INTO @DOC_SEQ;
	
	IF @@FETCH_STATUS <> 0
	BEGIN
		INSERT INTO WH_DOC_NO_D VALUES ( @YY, @ORG_ID, 0 );
		SET @DOC_SEQ = 0;
	END
	
	CLOSE CUR_SP_WH_DOC_SEQ;
	DEALLOCATE CUR_SP_WH_DOC_SEQ;
	
	COMMIT TRAN SP_WH_DOC_SEQ_TRANS;
END
GO
